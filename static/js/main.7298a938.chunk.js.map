{"version":3,"sources":["components/DataStructures/GraphHelper.js","components/DataStructures/Queue.js","components/Path/BreadthFirstSearch.js","components/DataStructures/Stack.js","components/Path/DepthFirstSearch.js","components/DataStructures/PriorityQueue.js","components/Path/Path.js","components/Path/Dijkstra.js","components/Path/Astar.js","components/Maze/RandomizedHorizontals.js","components/Maze/Maze.js","components/Maze/RandomizedVerticals.js","components/GraphSketch.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["GraphHelper","graph","returnNeighbours","index","result","i","j","currentCell","neighbour","weight","push","cols","rows","this","length","console","log","Queue","enqueue","data","queue","dequeue","splice","isEmpty","BreadthFirstSearch","maze","start","end","graphHelper","distances","parentTracking","row","parentRow","order","finalDistance","currNode","currDistance","currNeighbours","currNeighbour","itr","shortestPath","traversalOrder","distance","Stack","array","x","pop","DepthFirstSearch","stack","PriorityQueue","comparator","heap","heapSize","parent","parseInt","temp","minimum","siftDown","minIndex","key","value","heapify","Dijkstra","pQueue","currNeighbourIndex","heapIndex","findElement","element","update","Astar","heuristic","calculateHeuristic","endCoords","Math","abs","none","RandomizedHorizontals","RandomizedVerticals","grid","lines","holes","currHoleI","random","Graph","props","setup","p5","canvasParentRef","width","windowWidth","height","windowHeight","mazeHeight","mazeWidth","mazeHeightUnit","mazeWidthUnit","createCanvas","initGrid","place","empty","startPlaced","startCoords","endPlaced","animated","iPrev","jPrev","calculateIndex","X","Y","colourBox","fillValue","fill","rect","placeStartOnClick","mouseX","mouseY","placeEndOnClick","placeMazeWall","placeMazeWallOnClick","placeWeightOnClick","animateExploration","colour1","colour2","frameRate","setTimeout","animatePath","colour","floor","animateMazeWalls","clearSketch","clearAnimation","touchStarted","objectDraw","object","draw","returnClear","returnClearAnimation","returnFindPath","traversalInfo","PathAlgorithms","pathAlgorithm","getDistance","returnGenerateMaze","mazeOrder","MazeAlgorithms","mazeAlgorithm","render","className","wall","Component","CustomNavbar","state","selectedObject","selectedMazeAlgorithm","selectedPathAlgorithm","Navbar","bg","Container","Col","Dropdown","variant","Toggle","id","Menu","map","Item","onClick","getObject","toLowerCase","setState","as","ButtonGroup","Button","generateMaze","split","getMazeAlgorithm","replace","findPath","getShortPathAlgorithm","Badge","App","clear","bind","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7298a938.chunk.js","sourcesContent":["// class with methods to convert the 2D array into a graph\nclass GraphHelper {\n  constructor(graph) {\n    this.graph = graph;\n    this.rows = graph.length;\n    this.cols = graph[0].length;\n    console.log(\"cols\", this.cols);\n  }\n\n  returnNeighbours = index => {\n    var result = [];\n\n    let i = index[0],\n      j = index[1];\n    let currentCell = this.graph[i][j];\n\n    if (i - 1 >= 1) {\n      let neighbour = this.graph[i - 1][j];\n      let weight = false;\n      if (neighbour === 0 || neighbour === 4) {\n        weight = 1;\n      }\n      if (neighbour === 5 || (currentCell === 5 && neighbour !== 2)) {\n        weight = 5;\n      }\n      if (weight) {\n        result.push({\n          neighbour: [i - 1, j],\n          weight: weight\n        });\n      }\n    }\n\n    if (j - 1 >= 1) {\n      let neighbour = this.graph[i][j - 1];\n      let weight = false;\n      if (neighbour === 0 || neighbour === 4) {\n        weight = 1;\n      }\n      if (neighbour === 5 || (currentCell === 5 && neighbour !== 2)) {\n        weight = 5;\n      }\n      if (weight) {\n        result.push({\n          neighbour: [i, j - 1],\n          weight: weight\n        });\n      }\n    }\n\n    if (j + 1 < this.cols - 1) {\n      let neighbour = this.graph[i][j + 1];\n      let weight = false;\n      if (neighbour === 0 || neighbour === 4) {\n        weight = 1;\n      }\n      if (neighbour === 5 || (currentCell === 5 && neighbour !== 2)) {\n        weight = 5;\n      }\n      if (weight) {\n        result.push({\n          neighbour: [i, j + 1],\n          weight: weight\n        });\n      }\n    }\n\n    if (i + 1 < this.rows - 1) {\n      let neighbour = this.graph[i + 1][j];\n      let weight = false;\n      if (neighbour === 0 || neighbour === 4) {\n        weight = 1;\n      }\n      if (neighbour === 5 || (currentCell === 5 && neighbour !== 2)) {\n        weight = 5;\n      }\n      if (weight) {\n        result.push({\n          neighbour: [i + 1, j],\n          weight: weight\n        });\n      }\n    }\n\n    return result;\n  };\n}\n\nexport default GraphHelper;\n","class Queue {\n  constructor() {\n    this.queue = [];\n  }\n  enqueue = data => {\n    this.queue.push(data);\n  };\n  dequeue = () => {\n    return this.queue.splice(0, 1)[0];\n  };\n  isEmpty = () => {\n    return this.queue.length === 0;\n  };\n}\n\nexport default Queue;\n","import GraphHelper from \"../DataStructures/GraphHelper\";\nimport Queue from \"../DataStructures/Queue\";\n\n// function will return the order in which nodes are traversed during BFS\nfunction BreadthFirstSearch(maze, start, end) {\n  var queue = new Queue();\n  var rows = maze.length;\n  var cols = maze[0].length;\n  var graphHelper = new GraphHelper(maze);\n\n  // making the distances and tracking array\n  var distances = [];\n  var parentTracking = [];\n  for (let i = 0; i < rows; i++) {\n    let row = [];\n    let parentRow = [];\n    for (let j = 0; j < cols; j++) {\n      row.push(-1);\n      parentRow.push(false);\n    }\n    parentTracking.push(parentRow);\n    distances.push(row);\n  }\n\n  // BFS\n  var order = [];\n  var finalDistance = -1;\n  distances[start[0]][start[1]] = 0;\n  queue.enqueue(start);\n  while (!queue.isEmpty()) {\n    // console.log(\"queue\", JSON.stringify(queue.queue));\n    var currNode = queue.dequeue();\n    var currDistance = distances[currNode[0]][currNode[1]];\n    if (currNode[0] !== end[0] || currNode[1] !== end[1]) {\n      var currNeighbours = graphHelper.returnNeighbours(currNode);\n      for (let i = currNeighbours.length - 1; i >= 0; i--) {\n        let currNeighbour = currNeighbours[i].neighbour;\n        if (distances[currNeighbour[0]][currNeighbour[1]] === -1) {\n          queue.enqueue(currNeighbour);\n          distances[currNeighbour[0]][currNeighbour[1]] = currDistance + 1;\n          parentTracking[currNeighbour[0]][currNeighbour[1]] = currNode;\n        }\n      }\n      order.push(currNode);\n    } else {\n      finalDistance = currDistance;\n      break;\n    }\n  }\n\n  // finding the shortest path\n  var itr = parentTracking[end[0]][end[1]];\n  var shortestPath = [end];\n  while (itr) {\n    shortestPath.push(itr);\n    itr = parentTracking[itr[0]][itr[1]];\n  }\n\n  return {\n    traversalOrder: order,\n    shortestPath: shortestPath,\n    distance: finalDistance\n  };\n}\n\nexport default BreadthFirstSearch;\n","class Stack {\n  constructor() {\n    this.array = [];\n  }\n  push(x) {\n    this.array.push(x);\n  }\n  pop() {\n    if (!this.isEmpty()) {\n      return this.array.pop();\n    }\n    return null;\n  }\n  isEmpty() {\n    return this.array.length === 0;\n  }\n}\nexport default Stack;\n","import GraphHelper from \"../DataStructures/GraphHelper\";\nimport Stack from \"../DataStructures/Stack\";\n\n// function will return the order in which nodes are traversed during DFS\nfunction DepthFirstSearch(maze, start, end) {\n  var stack = new Stack();\n  var rows = maze.length;\n  var cols = maze[0].length;\n  var graphHelper = new GraphHelper(maze);\n\n  // making the distances and tracking array\n  var distances = [];\n  var parentTracking = [];\n  for (let i = 0; i < rows; i++) {\n    let row = [];\n    let parentRow = [];\n    for (let j = 0; j < cols; j++) {\n      row.push(-1);\n      parentRow.push(false);\n    }\n    parentTracking.push(parentRow);\n    distances.push(row);\n  }\n\n  // DFS\n  var order = [];\n  var finalDistance = -1;\n  distances[start[0]][start[1]] = 0;\n  stack.push(start);\n  while (!stack.isEmpty()) {\n    // console.log(\"stack\", JSON.stringify(stack.stack));\n    var currNode = stack.pop();\n    var currDistance = distances[currNode[0]][currNode[1]];\n    if (currNode[0] !== end[0] || currNode[1] !== end[1]) {\n      var currNeighbours = graphHelper.returnNeighbours(currNode);\n      for (let i = currNeighbours.length - 1; i >= 0; i--) {\n        let currNeighbour = currNeighbours[i].neighbour;\n        if (distances[currNeighbour[0]][currNeighbour[1]] === -1) {\n          stack.push(currNeighbour);\n          distances[currNeighbour[0]][currNeighbour[1]] = currDistance + 1;\n          parentTracking[currNeighbour[0]][currNeighbour[1]] = currNode;\n        }\n      }\n\n      order.push(currNode);\n    } else {\n      finalDistance = currDistance;\n      break;\n    }\n  }\n\n  // finding the shortest path\n  var itr = parentTracking[end[0]][end[1]];\n  var shortestPath = [end];\n  while (itr) {\n    shortestPath.push(itr);\n    itr = parentTracking[itr[0]][itr[1]];\n  }\n\n  return {\n    traversalOrder: order,\n    shortestPath: shortestPath,\n    distance: finalDistance\n  };\n}\n\nexport default DepthFirstSearch;\n","class PriorityQueue {\n  constructor(comparator) {\n    this.heap = [];\n    this.heapSize = 0;\n    this.comparator = comparator;\n  }\n  enqueue = data => {\n    this.heap.push(data);\n    this.heapSize++;\n    let i = this.heapSize - 1;\n\n    while (i > 0) {\n      let parent = parseInt((i - 1) / 2);\n      if (this.comparator(this.heap[i]) > this.comparator(this.heap[parent])) {\n        break;\n      } else {\n        let temp = this.heap[i];\n        this.heap[i] = this.heap[parent];\n        this.heap[parent] = temp;\n        i = parent;\n      }\n    }\n  };\n\n  dequeue = () => {\n    let minimum = this.heap[0];\n    if (this.heapSize !== 1) {\n      this.heap[0] = this.heap.pop();\n      this.heapSize--;\n      this.siftDown(0);\n    } else if (this.heapSize === 1) {\n      console.log(\"test\");\n      this.heap = [];\n      this.heapSize--;\n    }\n\n    return minimum;\n  };\n\n  siftDown(i) {\n    while (i < this.heapSize) {\n      let minIndex;\n      if (2 * i + 1 >= this.heapSize) {\n        break;\n      }\n      if (2 * i + 2 >= this.heapSize) {\n        minIndex = 2 * i + 1;\n      } else if (\n        this.comparator(this.heap[2 * i + 1]) <\n        this.comparator(this.heap[2 * i + 2])\n      ) {\n        minIndex = 2 * i + 1;\n      } else {\n        minIndex = 2 * i + 2;\n      }\n\n      if (\n        this.comparator(this.heap[minIndex]) < this.comparator(this.heap[i])\n      ) {\n        let temp = this.heap[minIndex];\n        this.heap[minIndex] = this.heap[i];\n        this.heap[i] = temp;\n        i = minIndex;\n      } else {\n        break;\n      }\n    }\n  }\n\n  heapify() {\n    console.log(\"test\");\n    for (let i = this.heapSize - 1; i >= 0; i--) {\n      this.siftDown(i);\n      // console.log(this.heap);\n    }\n  }\n\n  findElement(key) {\n    for (let i = 0; i < this.heapSize; i++) {\n      if (key(this.heap[i])) {\n        return i;\n      }\n    }\n    return false;\n  }\n  update(index, value) {\n    this.heap[index] = value;\n    this.heapify();\n  }\n\n  isEmpty() {\n    return this.heapSize === 0;\n  }\n}\n\nexport default PriorityQueue;\n","import BreadthFirstSearch from \"./BreadthFirstSearch\";\nimport DepthFirstSearch from \"./DepthFirstSearch\";\nimport Dijkstra from \"./Dijkstra\";\nimport Astar from \"./Astar\";\n\nexport default {\n  BreadthFirstSearch: BreadthFirstSearch,\n  DepthFirstSearch: DepthFirstSearch,\n  Dijkstra: Dijkstra,\n  Astar: Astar,\n  none: function() {}\n};\n","import GraphHelper from \"../DataStructures/GraphHelper\";\nimport PriorityQueue from \"../DataStructures/PriorityQueue\";\n\nexport default function dijkstra(maze, start, end) {\n  var pQueue = new PriorityQueue(function(x) {\n    return x.distance;\n  });\n  var rows = maze.length;\n  var cols = maze[0].length;\n  var graphHelper = new GraphHelper(maze);\n\n  // making the distances and tracking array\n  var distances = [];\n  var parentTracking = [];\n  for (let i = 0; i < rows; i++) {\n    let row = [];\n    let parentRow = [];\n    for (let j = 0; j < cols; j++) {\n      row.push(-1);\n      parentRow.push(false);\n    }\n    parentTracking.push(parentRow);\n    distances.push(row);\n  }\n\n  var order = [];\n  var finalDistance = -1;\n  distances[start[0]][start[1]] = 0;\n  // store\n  // {\n  //  index:[],\n  //  distance:[]\n  // }\n  pQueue.enqueue({\n    index: start,\n    distance: 0\n  });\n  while (!pQueue.isEmpty()) {\n    var currNode = pQueue.dequeue();\n\n    order.push(currNode.index);\n    var currDistance = distances[currNode.index[0]][currNode.index[1]];\n    if (currNode.index[0] !== end[0] || currNode.index[1] !== end[1]) {\n      var currNeighbours = graphHelper.returnNeighbours(currNode.index);\n\n      for (let i = 0; i <= currNeighbours.length - 1; i++) {\n        let currNeighbour = currNeighbours[i];\n        let currNeighbourIndex = currNeighbour.neighbour;\n\n        if (distances[currNeighbourIndex[0]][currNeighbourIndex[1]] === -1) {\n          pQueue.enqueue({\n            index: currNeighbourIndex,\n            distance: currDistance + currNeighbour.weight\n          });\n\n          distances[currNeighbourIndex[0]][currNeighbourIndex[1]] =\n            currDistance + currNeighbour.weight;\n          parentTracking[currNeighbourIndex[0]][currNeighbourIndex[1]] =\n            currNode.index;\n        } else if (\n          distances[currNeighbourIndex[0]][currNeighbourIndex[1]] >\n          currDistance + currNeighbour.weight\n        ) {\n          let heapIndex = pQueue.findElement(function(element) {\n            return (\n              element.index[0] === currNeighbourIndex[0] &&\n              element.index[1] === currNeighbourIndex[1]\n            );\n          });\n          if (heapIndex) {\n            pQueue.update(heapIndex, {\n              index: currNeighbourIndex,\n              distance: currDistance + currNeighbour.weight\n            });\n            distances[currNeighbourIndex[0]][currNeighbourIndex[1]] =\n              currDistance + currNeighbour.weight;\n            parentTracking[currNeighbourIndex[0]][\n              currNeighbourIndex[1]\n            ] = currNode;\n          }\n        }\n      }\n      //\n    } else {\n      finalDistance = currDistance;\n      break;\n    }\n  }\n\n  // finding the shortest path\n  var itr = parentTracking[end[0]][end[1]];\n  var shortestPath = [end];\n  while (itr) {\n    shortestPath.push(itr);\n    itr = parentTracking[itr[0]][itr[1]];\n  }\n  console.log(\"order\", order);\n  return {\n    traversalOrder: order,\n    shortestPath: shortestPath,\n    distance: finalDistance\n  };\n}\n","import GraphHelper from \"../DataStructures/GraphHelper\";\nimport PriorityQueue from \"../DataStructures/PriorityQueue\";\n\nexport default function dijkstra(maze, start, end) {\n  var pQueue = new PriorityQueue(function(x) {\n    return x.heuristic;\n  });\n  var rows = maze.length;\n  var cols = maze[0].length;\n  var graphHelper = new GraphHelper(maze);\n\n  // making the distances and tracking array\n  var distances = [];\n  var parentTracking = [];\n  for (let i = 0; i < rows; i++) {\n    let row = [];\n    let parentRow = [];\n    for (let j = 0; j < cols; j++) {\n      row.push(-1);\n      parentRow.push(false);\n    }\n    parentTracking.push(parentRow);\n    distances.push(row);\n  }\n\n  var order = [];\n  var finalDistance = -1;\n  distances[start[0]][start[1]] = 0;\n  // store\n  // {\n  //  index:[],\n  //  distance: 0,\n  //  heuristic: 0\n  // }\n  pQueue.enqueue({\n    index: start,\n    distance: 0,\n    heuristic: 0\n  });\n\n  function calculateHeuristic(index, endCoords) {\n    let x = Math.abs(index[0] - endCoords[0]);\n    let y = Math.abs(index[1] - endCoords[1]);\n    return x + y;\n  }\n\n  while (!pQueue.isEmpty()) {\n    var currNode = pQueue.dequeue();\n\n    order.push(currNode.index);\n    var currDistance = distances[currNode.index[0]][currNode.index[1]];\n    if (currNode.index[0] !== end[0] || currNode.index[1] !== end[1]) {\n      var currNeighbours = graphHelper.returnNeighbours(currNode.index);\n\n      for (let i = 0; i <= currNeighbours.length - 1; i++) {\n        let currNeighbour = currNeighbours[i];\n        let currNeighbourIndex = currNeighbour.neighbour;\n\n        if (distances[currNeighbourIndex[0]][currNeighbourIndex[1]] === -1) {\n          pQueue.enqueue({\n            index: currNeighbourIndex,\n            distance: currDistance + currNeighbour.weight,\n            heuristic:\n              currDistance +\n              currNeighbour.weight +\n              calculateHeuristic(currNeighbourIndex, end)\n          });\n\n          distances[currNeighbourIndex[0]][currNeighbourIndex[1]] =\n            currDistance + currNeighbour.weight;\n          parentTracking[currNeighbourIndex[0]][currNeighbourIndex[1]] =\n            currNode.index;\n        } else if (\n          distances[currNeighbourIndex[0]][currNeighbourIndex[1]] >\n          currDistance + currNeighbour.weight\n        ) {\n          let heapIndex = pQueue.findElement(function(element) {\n            return (\n              element.index[0] === currNeighbourIndex[0] &&\n              element.index[1] === currNeighbourIndex[1]\n            );\n          });\n          if (heapIndex) {\n            pQueue.update(heapIndex, {\n              index: currNeighbourIndex,\n              distance: currDistance + currNeighbour.weight,\n              heuristic:\n                currDistance +\n                currNeighbour.weight +\n                calculateHeuristic(currNeighbourIndex, end)\n            });\n            distances[currNeighbourIndex[0]][currNeighbourIndex[1]] =\n              currDistance + currNeighbour.weight;\n            parentTracking[currNeighbourIndex[0]][\n              currNeighbourIndex[1]\n            ] = currNode;\n          }\n        }\n      }\n      //\n    } else {\n      finalDistance = currDistance;\n      break;\n    }\n  }\n\n  // finding the shortest path\n  var itr = parentTracking[end[0]][end[1]];\n  var shortestPath = [end];\n  while (itr) {\n    shortestPath.push(itr);\n    itr = parentTracking[itr[0]][itr[1]];\n  }\n  console.log(\"order\", order);\n  return {\n    traversalOrder: order,\n    shortestPath: shortestPath,\n    distance: finalDistance\n  };\n}\n","function RandomizedHorizontals(grid) {\n  var rows = grid.length;\n  var cols = grid[0].length;\n\n  var lines = parseInt((rows - 2) / 2);\n  var holes = [];\n  for (let i = 0; i < lines; i++) {\n    var currHoleI = parseInt(Math.random() * (cols - 2) + 1);\n    holes.push(currHoleI);\n  }\n  var result = [];\n  for (let i = 0; i < holes.length; i++) {\n    for (let j = 1; j < cols - 1; j++) {\n      if (j !== holes[i]) {\n        result.push([2 * i + 2, j]);\n      }\n    }\n  }\n  return result;\n}\nexport default RandomizedHorizontals;\n","import RandomizedVerticals from \"./RandomizedVerticals\";\nimport RandomizedHorizontals from \"./RandomizedHorizontals\";\nexport default {\n  RandomizedVerticals: RandomizedVerticals,\n  RandomizedHorizontals: RandomizedHorizontals,\n  none: function() {}\n};\n","function RandomizedVerticals(grid) {\n  var rows = grid.length;\n  var cols = grid[0].length;\n  var lines = parseInt((cols - 2) / 2);\n  var holes = [];\n  for (let i = 0; i < lines; i++) {\n    var currHoleI = parseInt(Math.random() * (rows - 2) + 1);\n    holes.push(currHoleI);\n  }\n  var result = [];\n  for (let i = 0; i < holes.length; i++) {\n    for (let j = 1; j < rows - 1; j++) {\n      if (j !== holes[i]) {\n        result.push([j, 2 * i + 2]);\n      }\n    }\n  }\n  return result;\n}\nexport default RandomizedVerticals;\n","import React, { Component } from \"react\";\nimport Sketch from \"react-p5\";\n\nimport PathAlgorithms from \"./Path/Path\";\nimport MazeAlgorithms from \"./Maze/Maze\";\n\n// 0-> free\n// 1-> start\n// 2-> maze wall\n// 3-> border wall\n// 4-> end\n// 5-> weighted node\n\nexport default class Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.objectDraw = {\n      start: this.placeStartOnClick,\n      end: this.placeEndOnClick,\n      wall: this.placeMazeWallOnClick,\n      weight: this.placeWeightOnClick,\n      none: this.empty\n    };\n  }\n\n  setup = (p5, canvasParentRef) => {\n    this.width = p5.windowWidth * 1; //pixels\n    this.height = p5.windowHeight * 0.89; //pixels\n    this.mazeHeight = 61; //units\n    this.mazeWidth = 121; //units\n    this.mazeHeightUnit = this.height / this.mazeHeight; // pixels/unit\n    this.mazeWidthUnit = this.width / this.mazeWidth; // pixels/unit\n    p5.createCanvas(this.width, this.height).parent(canvasParentRef);\n    this.initGrid(p5);\n    // flags to reduce time complexities\n    this.place = this.empty;\n    this.startPlaced = false;\n    this.startCoords = [];\n    this.endPlaced = false;\n    this.endCoords = [];\n    this.animated = false;\n    this.iPrev = 0;\n    this.jPrev = 0;\n    // p5.frameRate(1);\n  };\n\n  initGrid(p5) {\n    this.graph = [];\n    for (let i = 0; i < this.mazeHeight; i++) {\n      var row = [];\n      for (let j = 0; j < this.mazeWidth; j++) {\n        if (\n          i === 0 ||\n          j === 0 ||\n          i === this.mazeHeight - 1 ||\n          j === this.mazeWidth - 1\n        ) {\n          row.push(3);\n          p5.fill(47, 56, 56);\n        } else {\n          p5.fill(255);\n          row.push(0);\n        }\n        p5.rect(\n          this.mazeWidthUnit * j,\n          this.mazeHeightUnit * i,\n          this.mazeWidthUnit,\n          this.mazeHeightUnit\n        );\n      }\n      this.graph.push(row);\n    }\n  }\n\n  calculateIndex = (X, Y) => {\n    let j = parseInt(X / this.mazeWidthUnit);\n    let i = parseInt(Y / this.mazeHeightUnit);\n    return [i, j];\n  };\n\n  colourBox = (p5, index, fillValue) => {\n    let i = index[0],\n      j = index[1];\n    if (typeof fillValue === \"number\") {\n      p5.fill(fillValue);\n    } else {\n      p5.fill(fillValue[0], fillValue[1], fillValue[2]);\n    }\n    p5.rect(\n      this.mazeWidthUnit * j,\n      this.mazeHeightUnit * i,\n      this.mazeWidthUnit,\n      this.mazeHeightUnit\n    );\n  };\n\n  empty = () => {};\n\n  placeStartOnClick = p5 => {\n    let index = this.calculateIndex(p5.mouseX, p5.mouseY);\n    if (\n      index[0] < this.mazeHeight &&\n      index[0] >= 0 &&\n      index[1] < this.mazeWidth &&\n      index[1] >= 0\n    ) {\n      if (this.graph[index[0]][index[1]] === 0) {\n        if (!this.startPlaced) {\n          this.graph[index[0]][index[1]] = 1;\n          this.colourBox(p5, index, [0, 203, 255]);\n          this.startPlaced = true;\n          this.startCoords = index;\n        } else {\n          // TODO: can make like a popup which says start has already been placed\n        }\n      } else if (this.startPlaced) {\n        if (this.graph[index[0]][index[1]] === 1) {\n          this.graph[index[0]][index[1]] = 0;\n          this.colourBox(p5, index, 255);\n          this.startPlaced = false;\n          this.startCoords = [];\n        }\n      }\n    }\n    this.place = this.empty;\n  };\n\n  placeEndOnClick = p5 => {\n    let index = this.calculateIndex(p5.mouseX, p5.mouseY);\n    if (\n      index[0] < this.mazeHeight &&\n      index[0] >= 0 &&\n      index[1] < this.mazeWidth &&\n      index[1] >= 0\n    ) {\n      if (this.graph[index[0]][index[1]] === 0) {\n        if (!this.endPlaced) {\n          this.graph[index[0]][index[1]] = 4;\n          this.colourBox(p5, index, [255, 25, 33]);\n          this.endPlaced = true;\n          this.endCoords = index;\n        } else {\n          // TODO: can make like a popup which says start has already been placed\n        }\n      } else if (this.endPlaced) {\n        if (this.graph[index[0]][index[1]] === 4) {\n          this.graph[index[0]][index[1]] = 0;\n          this.colourBox(p5, index, 255);\n          this.endPlaced = false;\n          this.endCoords = [];\n        }\n      }\n    }\n    this.place = this.empty;\n  };\n\n  placeMazeWall = (p5, index) => {\n    if (this.graph[index[0]][index[1]] === 0) {\n      this.graph[index[0]][index[1]] = 2;\n      this.colourBox(p5, index, [47, 56, 56]);\n    } else if (this.graph[index[0]][index[1]] === 2) {\n      this.graph[index[0]][index[1]] = 0;\n      this.colourBox(p5, index, 255);\n    }\n  };\n\n  placeMazeWallOnClick = p5 => {\n    let index = this.calculateIndex(p5.mouseX, p5.mouseY);\n    console.log(\"i,j prev\", this.iPrev, this.jPrev);\n    if (\n      index[0] < this.mazeHeight &&\n      index[0] >= 0 &&\n      index[1] < this.mazeWidth &&\n      index[1] >= 0\n    ) {\n      if (this.graph[index[0]][index[1]] === 0) {\n        this.graph[index[0]][index[1]] = 2;\n        this.colourBox(p5, index, [47, 56, 56]);\n      } else if (this.graph[index[0]][index[1]] === 2) {\n        this.graph[index[0]][index[1]] = 0;\n        this.colourBox(p5, index, 255);\n      }\n    }\n\n    this.place = this.empty;\n  };\n\n  placeWeightOnClick = p5 => {\n    let index = this.calculateIndex(p5.mouseX, p5.mouseY);\n    console.log(\"i,j prev\", this.iPrev, this.jPrev);\n    if (\n      index[0] < this.mazeHeight &&\n      index[0] >= 0 &&\n      index[1] < this.mazeWidth &&\n      index[1] >= 0\n    ) {\n      if (this.graph[index[0]][index[1]] === 0) {\n        this.graph[index[0]][index[1]] = 5;\n        this.colourBox(p5, index, [255, 0, 255]);\n      } else if (this.graph[index[0]][index[1]] === 5) {\n        this.graph[index[0]][index[1]] = 0;\n        this.colourBox(p5, index, 255);\n      }\n    }\n\n    this.place = this.empty;\n  };\n\n  animateExploration = (p5, order, colour1, colour2) => {\n    p5.frameRate(1);\n    for (let i = 1; i < order.length - 1; i++) {\n      setTimeout(() => {\n        if (this.graph[order[i][0]][order[i][1]] === 0) {\n          this.colourBox(p5, order[i], colour1);\n        } else {\n          this.colourBox(p5, order[i], colour2);\n        }\n      }, 0);\n    }\n    p5.frameRate(10);\n  };\n\n  animatePath = (p5, order, colour) => {\n    if (!colour) {\n      colour = [\n        Math.floor(Math.random() * 255 + 0),\n        Math.floor(Math.random() * 255 + 0),\n        Math.floor(Math.random() * 255 + 0)\n      ];\n    }\n\n    p5.frameRate(1);\n    for (let i = 1; i < order.length - 1; i++) {\n      setTimeout(() => {\n        this.colourBox(p5, order[i], colour);\n      }, 0);\n    }\n    p5.frameRate(10);\n  };\n\n  animateMazeWalls = (p5, order) => {\n    this.clearSketch(p5);\n    for (let i = 0; i < order.length; i++) {\n      setTimeout(() => {\n        this.placeMazeWall(p5, order[i]);\n      }, 0);\n    }\n  };\n\n  clearAnimation = p5 => {\n    for (let i = 0; i < this.graph.length; i++) {\n      for (let j = 0; j < this.graph[0].length; j++) {\n        if (this.graph[i][j] === 0) {\n          this.colourBox(p5, [i, j], 255);\n        }\n        if (this.graph[i][j] === 5) {\n          this.colourBox(p5, [i, j], [255, 0, 255]);\n        }\n      }\n    }\n    this.animated = false;\n  };\n\n  clearSketch = p5 => {\n    this.initGrid(p5);\n    this.startPlaced = false;\n    this.startCoords = [];\n    this.endPlaced = false;\n    this.endCoords = [];\n    this.animated = false;\n  };\n\n  touchStarted = p5 => {\n    this.place = this.objectDraw[this.props.object];\n  };\n  draw = p5 => {\n    this.place(p5);\n\n    if (this.props.returnClear()) {\n      // console.log(\"clearing\");\n      this.clearSketch(p5);\n    }\n    if (this.props.returnClearAnimation()) {\n      this.clearAnimation(p5);\n    }\n    if (this.props.returnFindPath()) {\n      if (this.animated) {\n        this.clearAnimation(p5);\n      }\n\n      if (this.startPlaced && this.endPlaced) {\n        this.traversalInfo = PathAlgorithms[this.props.pathAlgorithm](\n          this.graph,\n          this.startCoords,\n          this.endCoords\n        );\n        if (this.traversalInfo) {\n          this.animateExploration(\n            p5,\n            this.traversalInfo.traversalOrder,\n            [49, 233, 129],\n            [0, 0, 238]\n          );\n          this.animateExploration(\n            p5,\n            this.traversalInfo.shortestPath,\n            [255, 213, 60],\n            [0, 100, 0]\n          );\n          this.props.getDistance(this.traversalInfo.distance);\n          this.animated = true;\n        }\n      } else {\n        // TODO: something which says start and end haven't been placed\n      }\n    }\n\n    if (this.props.returnGenerateMaze()) {\n      console.log(\"making maze\");\n      let mazeOrder = MazeAlgorithms[this.props.mazeAlgorithm](this.graph);\n      console.log(\"mazeorder\", mazeOrder);\n      if (mazeOrder) {\n        this.animateMazeWalls(p5, mazeOrder);\n      }\n    }\n  };\n\n  render = () => {\n    return (\n      <div>\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          touchStarted={this.touchStarted}\n          className=\"sketch\"\n        />\n      </div>\n    );\n  };\n}\n","import React, { Component } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default class CustomNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedObject: \"select object\",\n      selectedMazeAlgorithm: \"select maze algorithm\",\n      selectedPathAlgorithm: \"select path algorithm\"\n    };\n  }\n  render() {\n    return (\n      <Navbar bg=\"dark\" className=\"navbar-custom\">\n        <Container>\n          <Col>\n            <Dropdown className=\"nav-element\" variant=\"light\">\n              <Dropdown.Toggle\n                className=\"nav-element\"\n                variant=\"light\"\n                id=\"dropdown-basic\"\n              >\n                {this.state.selectedObject}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"nav-element\">\n                {[\"Start\", \"Wall\", \"Weight\", \"End\"].map(object => {\n                  return (\n                    <Dropdown.Item\n                      onClick={() => {\n                        this.props.getObject(object.toLowerCase());\n                        this.setState({\n                          selectedObject: object\n                        });\n                      }}\n                      key={object}\n                    >\n                      {object}\n                    </Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          {/*  */}\n          <Col>\n            <Dropdown as={ButtonGroup} variant=\"light\" className=\"nav-element\">\n              <Button onClick={this.props.generateMaze} variant=\"light\">\n                {this.state.selectedMazeAlgorithm}\n              </Button>\n\n              <Dropdown.Toggle\n                split\n                variant=\"light\"\n                id=\"dropdown-split-basic\"\n              />\n\n              <Dropdown.Menu>\n                {[\"Randomized Verticals\", \"Randomized Horizontals\"].map(\n                  mazeAlgorithm => {\n                    return (\n                      <Dropdown.Item\n                        key={mazeAlgorithm}\n                        onClick={() => {\n                          this.props.getMazeAlgorithm(\n                            mazeAlgorithm.replace(/ /g, \"\")\n                          );\n                          this.setState({\n                            selectedMazeAlgorithm: mazeAlgorithm\n                          });\n                        }}\n                      >\n                        {mazeAlgorithm}\n                      </Dropdown.Item>\n                    );\n                  }\n                )}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          {/*  */}\n\n          <Col>\n            <Dropdown as={ButtonGroup} variant=\"light\" className=\"nav-element\">\n              <Button onClick={this.props.findPath} variant=\"light\">\n                {this.state.selectedPathAlgorithm}\n              </Button>\n\n              <Dropdown.Toggle\n                split\n                variant=\"light\"\n                id=\"dropdown-split-basic\"\n              />\n\n              <Dropdown.Menu>\n                {[\n                  \"Breadth First Search\",\n                  \"Depth First Search\",\n                  \"Dijkstra\",\n                  \"Astar\"\n                ].map(pathAlgorithm => {\n                  return (\n                    <Dropdown.Item\n                      key={pathAlgorithm}\n                      onClick={() => {\n                        this.props.getShortPathAlgorithm(\n                          pathAlgorithm.replace(/ /g, \"\")\n                        );\n                        this.setState({\n                          selectedPathAlgorithm: pathAlgorithm\n                        });\n                      }}\n                    >\n                      {pathAlgorithm}\n                    </Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          <Col>\n            <Button\n              variant=\"light\"\n              onClick={() => {\n                this.props.clearSketch();\n              }}\n              className=\"nav-element\"\n            >\n              Clear\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              variant=\"light\"\n              onClick={() => {\n                this.props.clearAnimation();\n              }}\n              className=\"nav-element\"\n            >\n              ClearAnimation\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"light\" className=\"nav-element\">\n              Distance <Badge variant=\"dark\">{this.props.distance}</Badge>\n            </Button>\n          </Col>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n","import React from \"react\";\nimport Graph from \"./components/GraphSketch\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      object: \"none\",\n      mazeAlgorithm: \"none\",\n      pathAlgorithm: \"none\",\n      distance: 0\n    };\n    this.getObject = this.getObject.bind(this);\n    this.getMazeAlgorithm = this.getMazeAlgorithm.bind(this);\n    this.getShortPathAlgorithm = this.getShortPathAlgorithm.bind(this);\n    this.clearSketch = this.clearSketch.bind(this);\n    this.returnClear = this.returnClear.bind(this);\n    this.getDistance = this.getDistance.bind(this);\n    this.findPath = this.findPath.bind(this);\n    this.returnFindPath = this.returnFindPath.bind(this);\n    this.generateMaze = this.generateMaze.bind(this);\n    this.returnGenerateMaze = this.returnGenerateMaze.bind(this);\n    this.clearAnimation = this.clearAnimation.bind(this);\n  }\n\n  getObject = object => {\n    this.setState({ object: object });\n  };\n  getMazeAlgorithm = mazeAlgorithm => {\n    this.setState({ mazeAlgorithm: mazeAlgorithm });\n  };\n  getShortPathAlgorithm = pathAlgorithm => {\n    this.setState({ pathAlgorithm: pathAlgorithm });\n  };\n\n  clearSketch = () => {\n    this.setState({ clear: true });\n  };\n  clearAnimation = () => {\n    this.setState({ clearAnimation: true });\n  };\n  findPath = () => {\n    this.setState({ findPath: true });\n  };\n  generateMaze = () => {\n    console.log(\"hi\");\n    this.setState({ generateMaze: true });\n  };\n  returnClearAnimation = () => {\n    if (this.state.clearAnimation) {\n      this.setState({\n        clearAnimation: false\n      });\n      return true;\n    }\n    return false;\n  };\n  returnClear = () => {\n    if (this.state.clear) {\n      this.setState({\n        clear: false,\n        distance: 0\n      });\n      return true;\n    }\n    return false;\n  };\n  returnFindPath = () => {\n    // console.log(this.s)\n    if (this.state.findPath) {\n      this.setState({\n        findPath: false\n      });\n      return true;\n    }\n    return false;\n  };\n  returnGenerateMaze = () => {\n    if (this.state.generateMaze) {\n      console.log(\"hi2\");\n      this.setState({\n        generateMaze: false\n      });\n      return true;\n    }\n    return false;\n  };\n  getDistance = distance => {\n    this.setState({ distance: distance });\n  };\n  render() {\n    return (\n      <div className=\"main\">\n        <Navbar\n          getObject={this.getObject}\n          getMazeAlgorithm={this.getMazeAlgorithm}\n          getShortPathAlgorithm={this.getShortPathAlgorithm}\n          clearSketch={this.clearSketch}\n          findPath={this.findPath}\n          distance={this.state.distance}\n          generateMaze={this.generateMaze}\n          clearAnimation={this.clearAnimation}\n        />\n        <Graph\n          className=\"center\"\n          object={this.state.object}\n          mazeAlgorithm={this.state.mazeAlgorithm}\n          pathAlgorithm={this.state.pathAlgorithm}\n          returnClear={this.returnClear}\n          returnFindPath={this.returnFindPath}\n          getDistance={this.getDistance}\n          returnGenerateMaze={this.returnGenerateMaze}\n          returnClearAnimation={this.returnClearAnimation}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}