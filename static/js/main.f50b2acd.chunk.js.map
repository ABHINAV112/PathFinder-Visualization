{"version":3,"sources":["components/DataStructures/GraphHelper.js","components/Path/Path.js","components/Path/BreadthFirstSearch.js","components/DataStructures/Queue.js","components/Path/DepthFirstSearch.js","components/DataStructures/Stack.js","components/Maze/Maze.js","components/Maze/RandomizedVerticals.js","components/Maze/RandomizedHorizontals.js","components/GraphSketch.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","graph","returnNeighbours","index","result","i","j","cols","neighbour","push","rows","this","length","console","log","BreadthFirstSearch","require","DepthFirstSearch","none","GraphHelper","Queue","maze","start","end","queue","graphHelper","distances","parentTracking","row","parentRow","order","finalDistance","enqueue","isEmpty","currNode","dequeue","currDistance","currNeighbours","itr","shortestPath","traversalOrder","distance","data","splice","Stack","stack","pop","array","x","RandomizedVerticals","RandomizedHorizontals","grid","lines","parseInt","holes","currHoleI","Math","random","PathAlgorithms","MazeAlgorithms","Graph","props","setup","p5","canvasParentRef","width","windowWidth","height","windowHeight","mazeHeight","mazeWidth","mazeHeightUnit","mazeWidthUnit","createCanvas","parent","initGrid","place","empty","startPlaced","startCoords","endPlaced","endCoords","animated","iPrev","jPrev","calculateIndex","X","Y","colourBox","fillValue","fill","rect","placeStartOnClick","mouseX","mouseY","placeEndOnClick","placeMazeWall","placeMazeWallOnClick","animatePath","colour","floor","frameRate","setTimeout","animateMazeWalls","clearSketch","clearAnimation","touchStarted","objectDraw","object","draw","returnClear","returnFindPath","traversalInfo","pathAlgorithm","getDistance","returnGenerateMaze","mazeOrder","mazeAlgorithm","render","className","wall","Component","CustomNavbar","state","selectedObject","selectedMazeAlgorithm","selectedPathAlgorithm","Navbar","bg","Container","Col","Dropdown","variant","Toggle","id","Menu","map","Item","onClick","getObject","toLowerCase","setState","as","ButtonGroup","Button","generateMaze","split","getMazeAlgorithm","replace","findPath","getShortPathAlgorithm","Badge","App","clear","bind","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f50b2acd.chunk.js","sourcesContent":["class GraphHelper {\n  constructor(graph) {\n    this.graph = graph;\n    this.rows = graph.length;\n    this.cols = graph[0].length;\n    console.log(\"cols\", this.cols);\n  }\n\n  returnNeighbours = index => {\n    var result = [];\n\n    let i = index[0],\n      j = index[1];\n\n    if (j + 1 < this.cols - 1) {\n      let neighbour = this.graph[i][j + 1];\n      if (neighbour === 0 || neighbour === 4) {\n        result.push([i, j + 1]);\n      }\n    }\n    if (i + 1 < this.rows - 1) {\n      let neighbour = this.graph[i + 1][j];\n      if (neighbour === 0 || neighbour === 4) {\n        result.push([i + 1, j]);\n      }\n    }\n\n    if (i - 1 >= 1) {\n      let neighbour = this.graph[i - 1][j];\n      if (neighbour === 0 || neighbour === 4) {\n        result.push([i - 1, j]);\n      }\n    }\n\n    if (j - 1 >= 1) {\n      let neighbour = this.graph[i][j - 1];\n      if (neighbour === 0 || neighbour === 4) {\n        result.push([i, j - 1]);\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = GraphHelper;\n","const BreadthFirstSearch = require(\"./BreadthFirstSearch\");\nconst DepthFirstSearch = require(\"./DepthFirstSearch\");\n\nmodule.exports = {\n  BreadthFirstSearch: BreadthFirstSearch,\n  DepthFirstSearch: DepthFirstSearch,\n  none: function() {}\n};\n","const GraphHelper = require(\"../DataStructures/GraphHelper\");\nconst Queue = require(\"../DataStructures/Queue\");\n\n// function will return the order in which nodes are traversed during BFS\nfunction BreadthFirstSearch(maze, start, end) {\n  var queue = new Queue();\n  var rows = maze.length;\n  var cols = maze[0].length;\n  var graphHelper = new GraphHelper(maze);\n\n  // making the distances and tracking array\n  var distances = [];\n  var parentTracking = [];\n  for (let i = 0; i < rows; i++) {\n    let row = [];\n    let parentRow = [];\n    for (let j = 0; j < cols; j++) {\n      row.push(-1);\n      parentRow.push(false);\n    }\n    parentTracking.push(parentRow);\n    distances.push(row);\n  }\n\n  // BFS\n  var order = [];\n  var finalDistance = -1;\n  distances[start[0]][start[1]] = 0;\n  queue.enqueue(start);\n  while (!queue.isEmpty()) {\n    // console.log(\"queue\", JSON.stringify(queue.queue));\n    var currNode = queue.dequeue();\n    var currDistance = distances[currNode[0]][currNode[1]];\n    if (currNode[0] !== end[0] || currNode[1] !== end[1]) {\n      var currNeighbours = graphHelper.returnNeighbours(currNode);\n      for (let i = 0; i < currNeighbours.length; i++) {\n        if (distances[currNeighbours[i][0]][currNeighbours[i][1]] === -1) {\n          queue.enqueue(currNeighbours[i]);\n          distances[currNeighbours[i][0]][currNeighbours[i][1]] =\n            currDistance + 1;\n          parentTracking[currNeighbours[i][0]][currNeighbours[i][1]] = currNode;\n        }\n      }\n      order.push(currNode);\n    } else {\n      finalDistance = currDistance;\n      break;\n    }\n  }\n\n  // finding the shortest path\n  var itr = parentTracking[end[0]][end[1]];\n  var shortestPath = [end];\n  while (itr) {\n    shortestPath.push(itr);\n    itr = parentTracking[itr[0]][itr[1]];\n  }\n\n  return {\n    traversalOrder: order,\n    shortestPath: shortestPath,\n    distance: finalDistance\n  };\n}\n\nmodule.exports = BreadthFirstSearch;\n","class Queue {\n  constructor() {\n    this.queue = [];\n  }\n  enqueue = data => {\n    this.queue.push(data);\n  };\n  dequeue = () => {\n    return this.queue.splice(0, 1)[0];\n  };\n  isEmpty = () => {\n    return this.queue.length === 0;\n  };\n}\n\nmodule.exports = Queue;\n","const GraphHelper = require(\"../DataStructures/GraphHelper\");\nconst Stack = require(\"../DataStructures/Stack\");\n\n// function will return the order in which nodes are traversed during BFS\nfunction DepthFirstSearch(maze, start, end) {\n  var stack = new Stack();\n  var rows = maze.length;\n  var cols = maze[0].length;\n  var graphHelper = new GraphHelper(maze);\n\n  // making the distances and tracking array\n  var distances = [];\n  var parentTracking = [];\n  for (let i = 0; i < rows; i++) {\n    let row = [];\n    let parentRow = [];\n    for (let j = 0; j < cols; j++) {\n      row.push(-1);\n      parentRow.push(false);\n    }\n    parentTracking.push(parentRow);\n    distances.push(row);\n  }\n\n  // BFS\n  var order = [];\n  var finalDistance = -1;\n  distances[start[0]][start[1]] = 0;\n  stack.push(start);\n  while (!stack.isEmpty()) {\n    // console.log(\"stack\", JSON.stringify(stack.stack));\n    var currNode = stack.pop();\n    var currDistance = distances[currNode[0]][currNode[1]];\n    if (currNode[0] !== end[0] || currNode[1] !== end[1]) {\n      var currNeighbours = graphHelper.returnNeighbours(currNode);\n      for (let i = 0; i < currNeighbours.length; i++) {\n        if (distances[currNeighbours[i][0]][currNeighbours[i][1]] === -1) {\n          stack.push(currNeighbours[i]);\n          distances[currNeighbours[i][0]][currNeighbours[i][1]] =\n            currDistance + 1;\n          parentTracking[currNeighbours[i][0]][currNeighbours[i][1]] = currNode;\n        }\n      }\n      order.push(currNode);\n    } else {\n      finalDistance = currDistance;\n      break;\n    }\n  }\n\n  // finding the shortest path\n  var itr = parentTracking[end[0]][end[1]];\n  var shortestPath = [end];\n  while (itr) {\n    shortestPath.push(itr);\n    itr = parentTracking[itr[0]][itr[1]];\n  }\n\n  return {\n    traversalOrder: order,\n    shortestPath: shortestPath,\n    distance: finalDistance\n  };\n}\n\nmodule.exports = DepthFirstSearch;\n","class Stack {\n  constructor() {\n    this.array = [];\n  }\n  push(x) {\n    this.array.push(x);\n  }\n  pop() {\n    if (!this.isEmpty()) {\n      return this.array.pop();\n    }\n    return null;\n  }\n  isEmpty() {\n    return this.array.length === 0;\n  }\n}\nmodule.exports = Stack;\n","const RandomizedVerticals = require(\"./RandomizedVerticals\");\nconst RandomizedHorizontals = require(\"./RandomizedHorizontals\");\nmodule.exports = {\n  RandomizedVerticals: RandomizedVerticals,\n  RandomizedHorizontals: RandomizedHorizontals,\n  none: function() {}\n};\n","function RandomizedVerticals(grid) {\n  var rows = grid.length;\n  var cols = grid[0].length;\n  var lines = parseInt((cols - 2) / 2);\n  var holes = [];\n  for (let i = 0; i < lines; i++) {\n    var currHoleI = parseInt(Math.random() * (rows - 2) + 1);\n    holes.push(currHoleI);\n  }\n  var result = [];\n  for (let i = 0; i < holes.length; i++) {\n    for (let j = 1; j < rows - 1; j++) {\n      if (j !== holes[i]) {\n        result.push([j, 2 * i + 2]);\n      }\n    }\n  }\n  return result;\n}\nmodule.exports = RandomizedVerticals;\n","function RandomizedHorizontals(grid) {\n  var rows = grid.length;\n  var cols = grid[0].length;\n\n  var lines = parseInt((rows - 2) / 2);\n  var holes = [];\n  for (let i = 0; i < lines; i++) {\n    var currHoleI = parseInt(Math.random() * (cols - 2) + 1);\n    holes.push(currHoleI);\n  }\n  var result = [];\n  for (let i = 0; i < holes.length; i++) {\n    for (let j = 1; j < cols - 1; j++) {\n      if (j !== holes[i]) {\n        result.push([2 * i + 2, j]);\n      }\n    }\n  }\n  return result;\n}\nmodule.exports = RandomizedHorizontals;\n","import React, { Component } from \"react\";\nimport Sketch from \"react-p5\";\n\nconst PathAlgorithms = require(\"./Path/Path\");\nconst MazeAlgorithms = require(\"./Maze/Maze\");\n\n// TODO: change maze wall to maze wall on click and make a maze wall wrapper for i,j\n// make a clear traversal which doesn't clear walls,start and end basically clears when free\n\n// 0-> free\n// 1-> start\n// 2-> maze wall\n// 3-> border wall\n// 4-> end\n\nexport default class Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.objectDraw = {\n      start: this.placeStartOnClick,\n      end: this.placeEndOnClick,\n      wall: this.placeMazeWallOnClick,\n      none: this.empty\n    };\n  }\n\n  setup = (p5, canvasParentRef) => {\n    this.width = p5.windowWidth * 1; //pixels\n    this.height = p5.windowHeight * 0.89; //pixels\n    this.mazeHeight = 61; //units\n    this.mazeWidth = 121; //units\n    this.mazeHeightUnit = this.height / this.mazeHeight; // pixels/unit\n    this.mazeWidthUnit = this.width / this.mazeWidth; // pixels/unit\n    p5.createCanvas(this.width, this.height).parent(canvasParentRef);\n    this.initGrid(p5);\n    // flags to reduce time complexities\n    this.place = this.empty;\n    this.startPlaced = false;\n    this.startCoords = [];\n    this.endPlaced = false;\n    this.endCoords = [];\n    this.animated = false;\n    this.iPrev = 0;\n    this.jPrev = 0;\n    // p5.frameRate(1);\n  };\n\n  initGrid(p5) {\n    this.graph = [];\n    for (let i = 0; i < this.mazeHeight; i++) {\n      var row = [];\n      for (let j = 0; j < this.mazeWidth; j++) {\n        if (\n          i === 0 ||\n          j === 0 ||\n          i === this.mazeHeight - 1 ||\n          j === this.mazeWidth - 1\n        ) {\n          row.push(3);\n          p5.fill(47, 56, 56);\n        } else {\n          p5.fill(255);\n          row.push(0);\n        }\n        p5.rect(\n          this.mazeWidthUnit * j,\n          this.mazeHeightUnit * i,\n          this.mazeWidthUnit,\n          this.mazeHeightUnit\n        );\n      }\n      this.graph.push(row);\n    }\n  }\n\n  calculateIndex = (X, Y) => {\n    let j = parseInt(X / this.mazeWidthUnit);\n    let i = parseInt(Y / this.mazeHeightUnit);\n    return [i, j];\n  };\n\n  colourBox = (p5, index, fillValue) => {\n    let i = index[0],\n      j = index[1];\n    if (typeof fillValue === \"number\") {\n      p5.fill(fillValue);\n    } else {\n      p5.fill(fillValue[0], fillValue[1], fillValue[2]);\n    }\n    p5.rect(\n      this.mazeWidthUnit * j,\n      this.mazeHeightUnit * i,\n      this.mazeWidthUnit,\n      this.mazeHeightUnit\n    );\n  };\n\n  empty = () => {};\n\n  placeStartOnClick = p5 => {\n    let index = this.calculateIndex(p5.mouseX, p5.mouseY);\n    if (\n      index[0] < this.mazeHeight &&\n      index[0] >= 0 &&\n      index[1] < this.mazeWidth &&\n      index[1] >= 0\n    ) {\n      if (this.graph[index[0]][index[1]] === 0) {\n        if (!this.startPlaced) {\n          this.graph[index[0]][index[1]] = 1;\n          this.colourBox(p5, index, [0, 203, 255]);\n          this.startPlaced = true;\n          this.startCoords = index;\n        } else {\n          // TODO: can make like a popup which says start has already been placed\n        }\n      } else if (this.startPlaced) {\n        if (this.graph[index[0]][index[1]] === 1) {\n          this.graph[index[0]][index[1]] = 0;\n          this.colourBox(p5, index, 255);\n          this.startPlaced = false;\n          this.startCoords = [];\n        }\n      }\n    }\n    this.place = this.empty;\n  };\n\n  placeEndOnClick = p5 => {\n    let index = this.calculateIndex(p5.mouseX, p5.mouseY);\n    if (\n      index[0] < this.mazeHeight &&\n      index[0] >= 0 &&\n      index[1] < this.mazeWidth &&\n      index[1] >= 0\n    ) {\n      if (this.graph[index[0]][index[1]] === 0) {\n        if (!this.endPlaced) {\n          this.graph[index[0]][index[1]] = 4;\n          this.colourBox(p5, index, [255, 25, 33]);\n          this.endPlaced = true;\n          this.endCoords = index;\n        } else {\n          // TODO: can make like a popup which says start has already been placed\n        }\n      } else if (this.endPlaced) {\n        if (this.graph[index[0]][index[1]] === 4) {\n          this.graph[index[0]][index[1]] = 0;\n          this.colourBox(p5, index, 255);\n          this.endPlaced = false;\n          this.endCoords = [];\n        }\n      }\n    }\n    this.place = this.empty;\n  };\n\n  placeMazeWall = (p5, index) => {\n    if (this.graph[index[0]][index[1]] === 0) {\n      this.graph[index[0]][index[1]] = 2;\n      this.colourBox(p5, index, [47, 56, 56]);\n    } else if (this.graph[index[0]][index[1]] === 2) {\n      this.graph[index[0]][index[1]] = 0;\n      this.colourBox(p5, index, 0);\n    }\n  };\n\n  placeMazeWallOnClick = p5 => {\n    let index = this.calculateIndex(p5.mouseX, p5.mouseY);\n    console.log(\"i,j prev\", this.iPrev, this.jPrev);\n    if (\n      index[0] < this.mazeHeight &&\n      index[0] >= 0 &&\n      index[1] < this.mazeWidth &&\n      index[1] >= 0\n    ) {\n      if (this.graph[index[0]][index[1]] === 0) {\n        this.graph[index[0]][index[1]] = 2;\n        this.colourBox(p5, index, [47, 56, 56]);\n      } else if (this.graph[index[0]][index[1]] === 2) {\n        this.graph[index[0]][index[1]] = 0;\n        this.colourBox(p5, index, 0);\n      }\n    }\n\n    this.place = this.empty;\n  };\n\n  animatePath = (p5, order, colour) => {\n    if (!colour) {\n      colour = [\n        Math.floor(Math.random() * 255 + 0),\n        Math.floor(Math.random() * 255 + 0),\n        Math.floor(Math.random() * 255 + 0)\n      ];\n    }\n\n    p5.frameRate(1);\n    for (let i = 1; i < order.length - 1; i++) {\n      setTimeout(() => {\n        this.colourBox(p5, order[i], colour);\n      }, 0);\n    }\n    p5.frameRate(10);\n  };\n\n  animateMazeWalls = (p5, order) => {\n    this.clearSketch(p5);\n    for (let i = 0; i < order.length; i++) {\n      setTimeout(() => {\n        this.placeMazeWall(p5, order[i]);\n      }, 0);\n    }\n  };\n\n  clearAnimation = p5 => {\n    for (let i = 0; i < this.graph.length; i++) {\n      for (let j = 0; j < this.graph[0].length; j++) {\n        if (this.graph[i][j] === 0) {\n          this.colourBox(p5, [i, j], 255);\n        }\n      }\n    }\n    this.animated = false;\n  };\n\n  clearSketch = p5 => {\n    this.initGrid(p5);\n    this.startPlaced = false;\n    this.startCoords = [];\n    this.endPlaced = false;\n    this.endCoords = [];\n    this.animated = false;\n  };\n\n  touchStarted = p5 => {\n    this.place = this.objectDraw[this.props.object];\n  };\n  draw = p5 => {\n    this.place(p5);\n\n    if (this.props.returnClear()) {\n      console.log(\"clearing\");\n      this.clearSketch(p5);\n    }\n    if (this.props.returnFindPath()) {\n      if (this.animated) {\n        this.clearAnimation(p5);\n      }\n\n      if (this.startPlaced && this.endPlaced) {\n        this.traversalInfo = PathAlgorithms[this.props.pathAlgorithm](\n          this.graph,\n          this.startCoords,\n          this.endCoords\n        );\n        if (this.traversalInfo) {\n          this.animatePath(p5, this.traversalInfo.traversalOrder, [\n            49,\n            233,\n            129\n          ]);\n          this.animatePath(p5, this.traversalInfo.shortestPath, [255, 213, 60]);\n          this.props.getDistance(this.traversalInfo.distance);\n          this.animated = true;\n        }\n      } else {\n        // TODO: something which says start and end haven't been placed\n      }\n    }\n\n    if (this.props.returnGenerateMaze()) {\n      console.log(\"making maze\");\n      let mazeOrder = MazeAlgorithms[this.props.mazeAlgorithm](this.graph);\n      console.log(\"mazeorder\", mazeOrder);\n      if (mazeOrder) {\n        this.animateMazeWalls(p5, mazeOrder);\n      }\n    }\n  };\n\n  render = () => {\n    return (\n      <div>\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          touchStarted={this.touchStarted}\n          className=\"sketch\"\n        />\n      </div>\n    );\n  };\n}\n","import React, { Component } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default class CustomNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedObject: \"select object\",\n      selectedMazeAlgorithm: \"select maze algorithm\",\n      selectedPathAlgorithm: \"select path algorithm\"\n    };\n  }\n  render() {\n    return (\n      <Navbar bg=\"dark\" className=\"navbar-custom\">\n        <Container>\n          <Col>\n            <Dropdown className=\"nav-element\" variant=\"light\">\n              <Dropdown.Toggle\n                className=\"nav-element\"\n                variant=\"light\"\n                id=\"dropdown-basic\"\n              >\n                {this.state.selectedObject}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"nav-element\">\n                {[\"Start\", \"Wall\", \"End\"].map(object => {\n                  return (\n                    <Dropdown.Item\n                      onClick={() => {\n                        this.props.getObject(object.toLowerCase());\n                        this.setState({\n                          selectedObject: object\n                        });\n                      }}\n                    >\n                      {object}\n                    </Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          {/*  */}\n          <Col>\n            <Dropdown as={ButtonGroup} variant=\"light\" className=\"nav-element\">\n              <Button onClick={this.props.generateMaze} variant=\"light\">\n                {this.state.selectedMazeAlgorithm}\n              </Button>\n\n              <Dropdown.Toggle\n                split\n                variant=\"light\"\n                id=\"dropdown-split-basic\"\n              />\n\n              <Dropdown.Menu>\n                {[\"Randomized Verticals\", \"Randomized Horizontals\"].map(\n                  mazeAlgorithm => {\n                    return (\n                      <Dropdown.Item\n                        onClick={() => {\n                          this.props.getMazeAlgorithm(\n                            mazeAlgorithm.replace(/ /g, \"\")\n                          );\n                          this.setState({\n                            selectedMazeAlgorithm: mazeAlgorithm\n                          });\n                        }}\n                      >\n                        {mazeAlgorithm}\n                      </Dropdown.Item>\n                    );\n                  }\n                )}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          {/*  */}\n\n          <Col>\n            <Dropdown as={ButtonGroup} variant=\"light\" className=\"nav-element\">\n              <Button onClick={this.props.findPath} variant=\"light\">\n                {this.state.selectedPathAlgorithm}\n              </Button>\n\n              <Dropdown.Toggle\n                split\n                variant=\"light\"\n                id=\"dropdown-split-basic\"\n              />\n\n              <Dropdown.Menu>\n                {[\"Breadth First Search\", \"Depth First Search\"].map(\n                  pathAlgorithm => {\n                    return (\n                      <Dropdown.Item\n                        onClick={() => {\n                          this.props.getShortPathAlgorithm(\n                            pathAlgorithm.replace(/ /g, \"\")\n                          );\n                          this.setState({\n                            selectedPathAlgorithm: pathAlgorithm\n                          });\n                        }}\n                      >\n                        {pathAlgorithm}\n                      </Dropdown.Item>\n                    );\n                  }\n                )}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          <Col>\n            <Button\n              variant=\"light\"\n              onClick={() => {\n                this.props.clearSketch();\n              }}\n              className=\"nav-element\"\n            >\n              Clear\n            </Button>\n          </Col>\n          <Col></Col>\n          <Col>\n            <Button variant=\"light\" className=\"nav-element\">\n              Distance <Badge variant=\"dark\">{this.props.distance}</Badge>\n            </Button>\n          </Col>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n","import React from \"react\";\nimport Graph from \"./components/GraphSketch\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      object: \"none\",\n      mazeAlgorithm: \"none\",\n      pathAlgorithm: \"none\",\n      distance: 0\n    };\n    this.getObject = this.getObject.bind(this);\n    this.getMazeAlgorithm = this.getMazeAlgorithm.bind(this);\n    this.getShortPathAlgorithm = this.getShortPathAlgorithm.bind(this);\n    this.clearSketch = this.clearSketch.bind(this);\n    this.returnClear = this.returnClear.bind(this);\n    this.getDistance = this.getDistance.bind(this);\n    this.findPath = this.findPath.bind(this);\n    this.returnFindPath = this.returnFindPath.bind(this);\n    this.generateMaze = this.generateMaze.bind(this);\n    this.returnGenerateMaze = this.returnGenerateMaze.bind(this);\n  }\n\n  getObject = object => {\n    this.setState({ object: object });\n  };\n  getMazeAlgorithm = mazeAlgorithm => {\n    this.setState({ mazeAlgorithm: mazeAlgorithm });\n  };\n  getShortPathAlgorithm = pathAlgorithm => {\n    this.setState({ pathAlgorithm: pathAlgorithm });\n  };\n\n  clearSketch = () => {\n    this.setState({ clear: true });\n  };\n  findPath = () => {\n    this.setState({ findPath: true });\n  };\n  generateMaze = () => {\n    console.log(\"hi\");\n    this.setState({ generateMaze: true });\n  };\n  returnClear = () => {\n    if (this.state.clear) {\n      this.setState({\n        clear: false,\n        distance: 0\n      });\n      return true;\n    }\n    return false;\n  };\n  returnFindPath = () => {\n    // console.log(this.s)\n    if (this.state.findPath) {\n      this.setState({\n        findPath: false\n      });\n      return true;\n    }\n    return false;\n  };\n  returnGenerateMaze = () => {\n    if (this.state.generateMaze) {\n      console.log(\"hi2\");\n      this.setState({\n        generateMaze: false\n      });\n      return true;\n    }\n    return false;\n  };\n  getDistance = distance => {\n    this.setState({ distance: distance });\n  };\n  render() {\n    return (\n      <div className=\"main\">\n        <Navbar\n          getObject={this.getObject}\n          getMazeAlgorithm={this.getMazeAlgorithm}\n          getShortPathAlgorithm={this.getShortPathAlgorithm}\n          clearSketch={this.clearSketch}\n          findPath={this.findPath}\n          distance={this.state.distance}\n          generateMaze={this.generateMaze}\n        />\n        <Graph\n          className=\"center\"\n          object={this.state.object}\n          mazeAlgorithm={this.state.mazeAlgorithm}\n          pathAlgorithm={this.state.pathAlgorithm}\n          returnClear={this.returnClear}\n          returnFindPath={this.returnFindPath}\n          getDistance={this.getDistance}\n          returnGenerateMaze={this.returnGenerateMaze}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}