{"version":3,"sources":["components/Path/Path.js","components/Path/BreadthFirstSearch.js","components/DataStructures/GraphHelper.js","components/DataStructures/Queue.js","components/Maze/Maze.js","components/Maze/RandomizedVerticals.js","components/Maze/RandomizedHorizontals.js","components/GraphSketch.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["BreadthFirstSearch","require","module","exports","none","GraphHelper","Queue","maze","start","end","queue","rows","length","cols","graphHelper","distances","parentTracking","i","row","parentRow","j","push","order","finalDistance","enqueue","isEmpty","currNode","dequeue","currDistance","currNeighbours","returnNeighbours","itr","shortestPath","traversalOrder","distance","graph","index","result","neighbour","this","console","log","data","splice","RandomizedVerticals","RandomizedHorizontals","grid","lines","parseInt","holes","currHoleI","Math","random","PathAlgorithms","MazeAlgorithms","Graph","props","setup","p5","canvasParentRef","width","windowWidth","height","windowHeight","mazeHeight","mazeWidth","mazeHeightUnit","mazeWidthUnit","createCanvas","parent","initGrid","place","empty","startPlaced","startCoords","endPlaced","endCoords","animated","calculateIndex","X","Y","colourBox","fillValue","fill","rect","placeStartOnClick","mouseX","mouseY","placeEndOnClick","placeMazeWall","placeMazeWallOnClick","animatePath","colour","floor","frameRate","setTimeout","animateMazeWalls","clearSketch","clearAnimation","touchStarted","objectDraw","object","draw","returnClear","returnFindPath","traversalInfo","pathAlgorithm","getDistance","returnGenerateMaze","mazeOrder","mazeAlgorithm","render","className","wall","Component","CustomNavbar","state","selectedObject","selectedMazeAlgorithm","selectedPathAlgorithm","Navbar","bg","Container","Col","Dropdown","variant","Toggle","id","Menu","map","Item","onClick","getObject","toLowerCase","setState","as","ButtonGroup","Button","generateMaze","split","getMazeAlgorithm","replace","findPath","getShortPathAlgorithm","Badge","App","clear","bind","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2IAAA,IAAMA,EAAqBC,EAAQ,IAEnCC,EAAOC,QAAU,CACfH,mBAAoBA,EACpBI,KAAM,e,mBCJR,IAAMC,EAAcJ,EAAQ,IACtBK,EAAQL,EAAQ,IAgEtBC,EAAOC,QA7DP,SAA4BI,EAAMC,EAAOC,GASvC,IARA,IAAIC,EAAQ,IAAIJ,EACZK,EAAOJ,EAAKK,OACZC,EAAON,EAAK,GAAGK,OACfE,EAAc,IAAIT,EAAYE,GAG9BQ,EAAY,GACZC,EAAiB,GACZC,EAAI,EAAGA,EAAIN,EAAMM,IAAK,CAG7B,IAFA,IAAIC,EAAM,GACNC,EAAY,GACPC,EAAI,EAAGA,EAAIP,EAAMO,IACxBF,EAAIG,MAAM,GACVF,EAAUE,MAAK,GAEjBL,EAAeK,KAAKF,GACpBJ,EAAUM,KAAKH,GAIjB,IAAII,EAAQ,GACRC,GAAiB,EAGrB,IAFAR,EAAUP,EAAM,IAAIA,EAAM,IAAM,EAChCE,EAAMc,QAAQhB,IACNE,EAAMe,WAAW,CAEvB,IAAIC,EAAWhB,EAAMiB,UACjBC,EAAeb,EAAUW,EAAS,IAAIA,EAAS,IACnD,GAAIA,EAAS,KAAOjB,EAAI,IAAMiB,EAAS,KAAOjB,EAAI,GAW3C,CACLc,EAAgBK,EAChB,MAXA,IADA,IAAIC,EAAiBf,EAAYgB,iBAAiBJ,GACzCT,EAAI,EAAGA,EAAIY,EAAejB,OAAQK,KACsB,IAA3DF,EAAUc,EAAeZ,GAAG,IAAIY,EAAeZ,GAAG,MACpDP,EAAMc,QAAQK,EAAeZ,IAC7BF,EAAUc,EAAeZ,GAAG,IAAIY,EAAeZ,GAAG,IAChDW,EAAe,EACjBZ,EAAea,EAAeZ,GAAG,IAAIY,EAAeZ,GAAG,IAAMS,GAGjEJ,EAAMD,KAAKK,GAUf,IAFA,IAAIK,EAAMf,EAAeP,EAAI,IAAIA,EAAI,IACjCuB,EAAe,CAACvB,GACbsB,GACLC,EAAaX,KAAKU,GAClBA,EAAMf,EAAee,EAAI,IAAIA,EAAI,IAGnC,MAAO,CACLE,eAAgBX,EAChBU,aAAcA,EACdE,SAAUX,K,8DCfdrB,EAAOC,QA7CL,WAAYgC,GAAQ,IAAD,gCAOnBL,iBAAmB,SAAAM,GACjB,IAAIC,EAAS,GAETpB,EAAImB,EAAM,GACZhB,EAAIgB,EAAM,GAEZ,GAAInB,EAAI,GAAK,EAAG,CACd,IAAIqB,EAAY,EAAKH,MAAMlB,EAAI,GAAGG,GAChB,IAAdkB,GAAiC,IAAdA,GACrBD,EAAOhB,KAAK,CAACJ,EAAI,EAAGG,IAIxB,GAAIA,EAAI,GAAK,EAAG,CACd,IAAIkB,EAAY,EAAKH,MAAMlB,GAAGG,EAAI,GAChB,IAAdkB,GAAiC,IAAdA,GACrBD,EAAOhB,KAAK,CAACJ,EAAGG,EAAI,IAIxB,GAAIH,EAAI,EAAI,EAAKN,KAAO,EAAG,CACzB,IAAI2B,EAAY,EAAKH,MAAMlB,EAAI,GAAGG,GAChB,IAAdkB,GAAiC,IAAdA,GACrBD,EAAOhB,KAAK,CAACJ,EAAI,EAAGG,IAIxB,GAAIA,EAAI,EAAI,EAAKP,KAAO,EAAG,CACzB,IAAIyB,EAAY,EAAKH,MAAMlB,GAAGG,EAAI,GAChB,IAAdkB,GAAiC,IAAdA,GACrBD,EAAOhB,KAAK,CAACJ,EAAGG,EAAI,IAIxB,OAAOiB,GAxCPE,KAAKJ,MAAQA,EACbI,KAAK5B,KAAOwB,EAAMvB,OAClB2B,KAAK1B,KAAOsB,EAAM,GAAGvB,OACrB4B,QAAQC,IAAI,OAAQF,KAAK1B,Q,mFCU7BX,EAAOC,QAdL,aAAe,IAAD,gCAGdqB,QAAU,SAAAkB,GACR,EAAKhC,MAAMW,KAAKqB,IAJJ,KAMdf,QAAU,WACR,OAAO,EAAKjB,MAAMiC,OAAO,EAAG,GAAG,IAPnB,KASdlB,QAAU,WACR,OAA6B,IAAtB,EAAKf,MAAME,QATlB2B,KAAK7B,MAAQ,K,wCCFjB,IAAMkC,EAAsB3C,EAAQ,IAC9B4C,EAAwB5C,EAAQ,IACtCC,EAAOC,QAAU,CACfyC,oBAAqBA,EACrBC,sBAAuBA,EACvBzC,KAAM,e,iBCcRF,EAAOC,QAnBP,SAA6B2C,GAK3B,IAJA,IAAInC,EAAOmC,EAAKlC,OACZC,EAAOiC,EAAK,GAAGlC,OACfmC,EAAQC,UAAUnC,EAAO,GAAK,GAC9BoC,EAAQ,GACHhC,EAAI,EAAGA,EAAI8B,EAAO9B,IAAK,CAC9B,IAAIiC,EAAYF,SAASG,KAAKC,UAAYzC,EAAO,GAAK,GACtDsC,EAAM5B,KAAK6B,GAGb,IADA,IAAIb,EAAS,GACJpB,EAAI,EAAGA,EAAIgC,EAAMrC,OAAQK,IAChC,IAAK,IAAIG,EAAI,EAAGA,EAAIT,EAAO,EAAGS,IACxBA,IAAM6B,EAAMhC,IACdoB,EAAOhB,KAAK,CAACD,EAAG,EAAIH,EAAI,IAI9B,OAAOoB,I,iBCGTnC,EAAOC,QApBP,SAA+B2C,GAM7B,IALA,IAAInC,EAAOmC,EAAKlC,OACZC,EAAOiC,EAAK,GAAGlC,OAEfmC,EAAQC,UAAUrC,EAAO,GAAK,GAC9BsC,EAAQ,GACHhC,EAAI,EAAGA,EAAI8B,EAAO9B,IAAK,CAC9B,IAAIiC,EAAYF,SAASG,KAAKC,UAAYvC,EAAO,GAAK,GACtDoC,EAAM5B,KAAK6B,GAGb,IADA,IAAIb,EAAS,GACJpB,EAAI,EAAGA,EAAIgC,EAAMrC,OAAQK,IAChC,IAAK,IAAIG,EAAI,EAAGA,EAAIP,EAAO,EAAGO,IACxBA,IAAM6B,EAAMhC,IACdoB,EAAOhB,KAAK,CAAC,EAAIJ,EAAI,EAAGG,IAI9B,OAAOiB,I,wKCfHgB,EAAiBpD,EAAQ,IACzBqD,EAAiBrD,EAAQ,IAWVsD,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KASRC,MAAQ,SAACC,EAAIC,GACX,EAAKC,MAAyB,EAAjBF,EAAGG,YAChB,EAAKC,OAA2B,IAAlBJ,EAAGK,aACjB,EAAKC,WAAa,GAClB,EAAKC,UAAY,IACjB,EAAKC,eAAiB,EAAKJ,OAAS,EAAKE,WACzC,EAAKG,cAAgB,EAAKP,MAAQ,EAAKK,UACvCP,EAAGU,aAAa,EAAKR,MAAO,EAAKE,QAAQO,OAAOV,GAChD,EAAKW,SAASZ,GAEd,EAAKa,MAAQ,EAAKC,MAClB,EAAKC,aAAc,EACnB,EAAKC,YAAc,GACnB,EAAKC,WAAY,EACjB,EAAKC,UAAY,GACjB,EAAKC,UAAW,GAzBC,EAyDnBC,eAAiB,SAACC,EAAGC,GACnB,IAAI5D,EAAI4B,SAAS+B,EAAI,EAAKZ,eAE1B,MAAO,CADCnB,SAASgC,EAAI,EAAKd,gBACf9C,IA5DM,EA+DnB6D,UAAY,SAACvB,EAAItB,EAAO8C,GACtB,IAAIjE,EAAImB,EAAM,GACZhB,EAAIgB,EAAM,GACa,kBAAd8C,EACTxB,EAAGyB,KAAKD,GAERxB,EAAGyB,KAAKD,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAEhDxB,EAAG0B,KACD,EAAKjB,cAAgB/C,EACrB,EAAK8C,eAAiBjD,EACtB,EAAKkD,cACL,EAAKD,iBA3EU,EA+EnBM,MAAQ,aA/EW,EAiFnBa,kBAAoB,SAAA3B,GAClB,IAAItB,EAAQ,EAAK0C,eAAepB,EAAG4B,OAAQ5B,EAAG6B,QAE5CnD,EAAM,GAAK,EAAK4B,YAChB5B,EAAM,IAAM,GACZA,EAAM,GAAK,EAAK6B,WAChB7B,EAAM,IAAM,IAE2B,IAAnC,EAAKD,MAAMC,EAAM,IAAIA,EAAM,IACxB,EAAKqC,cACR,EAAKtC,MAAMC,EAAM,IAAIA,EAAM,IAAM,EACjC,EAAK6C,UAAUvB,EAAItB,EAAO,CAAC,EAAG,EAAG,MACjC,EAAKqC,aAAc,EACnB,EAAKC,YAActC,GAIZ,EAAKqC,aACyB,IAAnC,EAAKtC,MAAMC,EAAM,IAAIA,EAAM,MAC7B,EAAKD,MAAMC,EAAM,IAAIA,EAAM,IAAM,EACjC,EAAK6C,UAAUvB,EAAItB,EAAO,KAC1B,EAAKqC,aAAc,EACnB,EAAKC,YAAc,KAIzB,EAAKH,MAAQ,EAAKC,OA3GD,EA8GnBgB,gBAAkB,SAAA9B,GAChB,IAAItB,EAAQ,EAAK0C,eAAepB,EAAG4B,OAAQ5B,EAAG6B,QAE5CnD,EAAM,GAAK,EAAK4B,YAChB5B,EAAM,IAAM,GACZA,EAAM,GAAK,EAAK6B,WAChB7B,EAAM,IAAM,IAE2B,IAAnC,EAAKD,MAAMC,EAAM,IAAIA,EAAM,IACxB,EAAKuC,YACR,EAAKxC,MAAMC,EAAM,IAAIA,EAAM,IAAM,EACjC,EAAK6C,UAAUvB,EAAItB,EAAO,CAAC,EAAG,IAAK,MACnC,EAAKuC,WAAY,EACjB,EAAKC,UAAYxC,GAIV,EAAKuC,WACyB,IAAnC,EAAKxC,MAAMC,EAAM,IAAIA,EAAM,MAC7B,EAAKD,MAAMC,EAAM,IAAIA,EAAM,IAAM,EACjC,EAAK6C,UAAUvB,EAAItB,EAAO,KAC1B,EAAKuC,WAAY,EACjB,EAAKC,UAAY,KAIvB,EAAKL,MAAQ,EAAKC,OAxID,EA2InBiB,cAAgB,SAAC/B,EAAItB,GACoB,IAAnC,EAAKD,MAAMC,EAAM,IAAIA,EAAM,KAC7B,EAAKD,MAAMC,EAAM,IAAIA,EAAM,IAAM,EACjC,EAAK6C,UAAUvB,EAAItB,EAAO,IACkB,IAAnC,EAAKD,MAAMC,EAAM,IAAIA,EAAM,MACpC,EAAKD,MAAMC,EAAM,IAAIA,EAAM,IAAM,EACjC,EAAK6C,UAAUvB,EAAItB,EAAO,OAjJX,EAqJnBsD,qBAAuB,SAAAhC,GACrB,IAAItB,EAAQ,EAAK0C,eAAepB,EAAG4B,OAAQ5B,EAAG6B,QAE5CnD,EAAM,GAAK,EAAK4B,YAChB5B,EAAM,IAAM,GACZA,EAAM,GAAK,EAAK6B,WAChB7B,EAAM,IAAM,IAE2B,IAAnC,EAAKD,MAAMC,EAAM,IAAIA,EAAM,KAC7B,EAAKD,MAAMC,EAAM,IAAIA,EAAM,IAAM,EACjC,EAAK6C,UAAUvB,EAAItB,EAAO,IACkB,IAAnC,EAAKD,MAAMC,EAAM,IAAIA,EAAM,MACpC,EAAKD,MAAMC,EAAM,IAAIA,EAAM,IAAM,EACjC,EAAK6C,UAAUvB,EAAItB,EAAO,OAI9B,EAAKmC,MAAQ,EAAKC,OAtKD,EAyKnBmB,YAAc,SAACjC,EAAIpC,GACjB,IAAIsE,EAAS,CACXzC,KAAK0C,MAAsB,IAAhB1C,KAAKC,SAAiB,GACjCD,KAAK0C,MAAsB,IAAhB1C,KAAKC,SAAiB,GACjCD,KAAK0C,MAAsB,IAAhB1C,KAAKC,SAAiB,IAEnCM,EAAGoC,UAAU,GACb,IAP2B,eAOlB7E,GACP8E,YAAW,WACT,EAAKd,UAAUvB,EAAIpC,EAAML,GAAI2E,KAC5B,IAHI3E,EAAI,EAAGA,EAAIK,EAAMV,OAAS,EAAGK,IAAM,EAAnCA,GAKTyC,EAAGoC,UAAU,KArLI,EAwLnBE,iBAAmB,SAACtC,EAAIpC,GACtB,EAAK2E,YAAYvC,GACjB,IAFgC,eAEvBzC,GACP8E,YAAW,WACT,EAAKN,cAAc/B,EAAIpC,EAAML,MAC5B,IAHIA,EAAI,EAAGA,EAAIK,EAAMV,OAAQK,IAAM,EAA/BA,IA1LQ,EAiMnBiF,eAAiB,SAAAxC,GACf,IAAK,IAAIzC,EAAI,EAAGA,EAAI,EAAKkB,MAAMvB,OAAQK,IACrC,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAKe,MAAM,GAAGvB,OAAQQ,IACf,IAArB,EAAKe,MAAMlB,GAAGG,IAChB,EAAK6D,UAAUvB,EAAI,CAACzC,EAAGG,GAAI,KAIjC,EAAKyD,UAAW,GAzMC,EA4MnBoB,YAAc,SAAAvC,GACZ,EAAKY,SAASZ,GACd,EAAKe,aAAc,EACnB,EAAKC,YAAc,GACnB,EAAKC,WAAY,EACjB,EAAKC,UAAY,GACjB,EAAKC,UAAW,GAlNC,EAqNnBsB,aAAe,SAAAzC,GACb,EAAKa,MAAQ,EAAK6B,WAAW,EAAK5C,MAAM6C,SAtNvB,EAwNnBC,KAAO,SAAA5C,GA6BL,GA5BA,EAAKa,MAAMb,GAEP,EAAKF,MAAM+C,gBACb/D,QAAQC,IAAI,YACZ,EAAKwD,YAAYvC,IAEf,EAAKF,MAAMgD,mBACT,EAAK3B,UACP,EAAKqB,eAAexC,GAGlB,EAAKe,aAAe,EAAKE,YAC3B,EAAK8B,cAAgBpD,EAAe,EAAKG,MAAMkD,eAC7C,EAAKvE,MACL,EAAKuC,YACL,EAAKE,WAEH,EAAK6B,gBACP,EAAKd,YAAYjC,EAAI,EAAK+C,cAAcxE,gBACxC,EAAK0D,YAAYjC,EAAI,EAAK+C,cAAczE,cACxC,EAAKwB,MAAMmD,YAAY,EAAKF,cAAcvE,UAC1C,EAAK2C,UAAW,KAOlB,EAAKrB,MAAMoD,qBAAsB,CACnCpE,QAAQC,IAAI,eACZ,IAAIoE,EAAYvD,EAAe,EAAKE,MAAMsD,eAAe,EAAK3E,OAC9DK,QAAQC,IAAI,YAAaoE,GACrBA,GACF,EAAKb,iBAAiBtC,EAAImD,KA1Pb,EA+PnBE,OAAS,WACP,OACE,6BACE,kBAAC,IAAD,CACEtD,MAAO,EAAKA,MACZ6C,KAAM,EAAKA,KACXH,aAAc,EAAKA,aACnBa,UAAU,aApQhB,EAAKZ,WAAa,CAChB5F,MAAO,EAAK6E,kBACZ5E,IAAK,EAAK+E,gBACVyB,KAAM,EAAKvB,qBACXtF,KAAM,EAAKoE,OANI,E,sEA6BVd,GACPnB,KAAKJ,MAAQ,GACb,IAAK,IAAIlB,EAAI,EAAGA,EAAIsB,KAAKyB,WAAY/C,IAAK,CAExC,IADA,IAAIC,EAAM,GACDE,EAAI,EAAGA,EAAImB,KAAK0B,UAAW7C,IAE1B,IAANH,GACM,IAANG,GACAH,IAAMsB,KAAKyB,WAAa,GACxB5C,IAAMmB,KAAK0B,UAAY,GAEvB/C,EAAIG,KAAK,GACTqC,EAAGyB,KAAK,GAAI,IAAK,OAEjBzB,EAAGyB,KAAK,KACRjE,EAAIG,KAAK,IAEXqC,EAAG0B,KACD7C,KAAK4B,cAAgB/C,EACrBmB,KAAK2B,eAAiBjD,EACtBsB,KAAK4B,cACL5B,KAAK2B,gBAGT3B,KAAKJ,MAAMd,KAAKH,Q,GAtDagG,a,uDCNdC,E,YACnB,WAAY3D,GAAQ,IAAD,8BACjB,4CAAMA,KACD4D,MAAQ,CACXC,eAAgB,gBAChBC,sBAAuB,wBACvBC,sBAAuB,yBALR,E,sEAQT,IAAD,OACP,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOT,UAAU,iBAC1B,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUZ,UAAU,cAAca,QAAQ,SACxC,kBAACD,EAAA,EAASE,OAAV,CACEd,UAAU,cACVa,QAAQ,QACRE,GAAG,kBAEFxF,KAAK6E,MAAMC,gBAGd,kBAACO,EAAA,EAASI,KAAV,CAAehB,UAAU,eACtB,CAAC,QAAS,OAAQ,OAAOiB,KAAI,SAAA5B,GAC5B,OACE,kBAACuB,EAAA,EAASM,KAAV,CACEC,QAAS,WACP,EAAK3E,MAAM4E,UAAU/B,EAAOgC,eAC5B,EAAKC,SAAS,CACZjB,eAAgBhB,MAInBA,SASb,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUW,GAAIC,IAAaX,QAAQ,QAAQb,UAAU,eACnD,kBAACyB,EAAA,EAAD,CAAQN,QAAS5F,KAAKiB,MAAMkF,aAAcb,QAAQ,SAC/CtF,KAAK6E,MAAME,uBAGd,kBAACM,EAAA,EAASE,OAAV,CACEa,OAAK,EACLd,QAAQ,QACRE,GAAG,yBAGL,kBAACH,EAAA,EAASI,KAAV,KACG,CAAC,uBAAwB,0BAA0BC,KAClD,SAAAnB,GACE,OACE,kBAACc,EAAA,EAASM,KAAV,CACEC,QAAS,WACP,EAAK3E,MAAMoF,iBACT9B,EAAc+B,QAAQ,KAAM,KAE9B,EAAKP,SAAS,CACZhB,sBAAuBR,MAI1BA,SAWf,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUW,GAAIC,IAAaX,QAAQ,QAAQb,UAAU,eACnD,kBAACyB,EAAA,EAAD,CAAQN,QAAS5F,KAAKiB,MAAMsF,SAAUjB,QAAQ,SAC3CtF,KAAK6E,MAAMG,uBAGd,kBAACK,EAAA,EAASE,OAAV,CACEa,OAAK,EACLd,QAAQ,QACRE,GAAG,yBAGL,kBAACH,EAAA,EAASI,KAAV,KACG,CAAC,wBAAwBC,KAAI,SAAAvB,GAC5B,OACE,kBAACkB,EAAA,EAASM,KAAV,CACEC,QAAS,WACP,EAAK3E,MAAMuF,sBACTrC,EAAcmC,QAAQ,KAAM,KAE9B,EAAKP,SAAS,CACZf,sBAAuBb,MAI1BA,SAQb,kBAACiB,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CACEZ,QAAQ,QACRM,QAAS,WACP,EAAK3E,MAAMyC,eAEbe,UAAU,eALZ,UAUF,kBAACW,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAQZ,QAAQ,QAAQb,UAAU,eAAlC,YACW,kBAACgC,EAAA,EAAD,CAAOnB,QAAQ,QAAQtF,KAAKiB,MAAMtB,kB,GA/HfgF,aCHrB+B,G,wBACnB,WAAYzF,GAAQ,IAAD,8BACjB,4CAAMA,KAmBR4E,UAAY,SAAA/B,GACV,EAAKiC,SAAS,CAAEjC,OAAQA,KArBP,EAuBnBuC,iBAAmB,SAAA9B,GACjB,EAAKwB,SAAS,CAAExB,cAAeA,KAxBd,EA0BnBiC,sBAAwB,SAAArC,GACtB,EAAK4B,SAAS,CAAE5B,cAAeA,KA3Bd,EA8BnBT,YAAc,WACZ,EAAKqC,SAAS,CAAEY,OAAO,KA/BN,EAiCnBJ,SAAW,WACT,EAAKR,SAAS,CAAEQ,UAAU,KAlCT,EAoCnBJ,aAAe,WACblG,QAAQC,IAAI,MACZ,EAAK6F,SAAS,CAAEI,cAAc,KAtCb,EAwCnBnC,YAAc,WACZ,QAAI,EAAKa,MAAM8B,QACb,EAAKZ,SAAS,CACZY,OAAO,EACPhH,SAAU,KAEL,IA9CQ,EAkDnBsE,eAAiB,WAEf,QAAI,EAAKY,MAAM0B,WACb,EAAKR,SAAS,CACZQ,UAAU,KAEL,IAxDQ,EA4DnBlC,mBAAqB,WACnB,QAAI,EAAKQ,MAAMsB,eACblG,QAAQC,IAAI,OACZ,EAAK6F,SAAS,CACZI,cAAc,KAET,IAlEQ,EAsEnB/B,YAAc,SAAAzE,GACZ,EAAKoG,SAAS,CAAEpG,SAAUA,KArE1B,EAAKkF,MAAQ,CACXf,OAAQ,OACRS,cAAe,OACfJ,cAAe,OACfxE,SAAU,GAEZ,EAAKkG,UAAY,EAAKA,UAAUe,KAAf,gBACjB,EAAKP,iBAAmB,EAAKA,iBAAiBO,KAAtB,gBACxB,EAAKJ,sBAAwB,EAAKA,sBAAsBI,KAA3B,gBAC7B,EAAKlD,YAAc,EAAKA,YAAYkD,KAAjB,gBACnB,EAAK5C,YAAc,EAAKA,YAAY4C,KAAjB,gBACnB,EAAKxC,YAAc,EAAKA,YAAYwC,KAAjB,gBACnB,EAAKL,SAAW,EAAKA,SAASK,KAAd,gBAChB,EAAK3C,eAAiB,EAAKA,eAAe2C,KAApB,gBACtB,EAAKT,aAAe,EAAKA,aAAaS,KAAlB,gBACpB,EAAKvC,mBAAqB,EAAKA,mBAAmBuC,KAAxB,gBAjBT,E,sEA0EjB,OACE,yBAAKnC,UAAU,QACb,kBAAC,EAAD,CACEoB,UAAW7F,KAAK6F,UAChBQ,iBAAkBrG,KAAKqG,iBACvBG,sBAAuBxG,KAAKwG,sBAC5B9C,YAAa1D,KAAK0D,YAClB6C,SAAUvG,KAAKuG,SACf5G,SAAUK,KAAK6E,MAAMlF,SACrBwG,aAAcnG,KAAKmG,eAErB,kBAAC,EAAD,CACE1B,UAAU,SACVX,OAAQ9D,KAAK6E,MAAMf,OACnBS,cAAevE,KAAK6E,MAAMN,cAC1BJ,cAAenE,KAAK6E,MAAMV,cAC1BH,YAAahE,KAAKgE,YAClBC,eAAgBjE,KAAKiE,eACrBG,YAAapE,KAAKoE,YAClBC,mBAAoBrE,KAAKqE,0B,GA9FFwC,IAAMlC,YCMnBmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAS3C,OAAO,kBAAC,EAAD,MAAS4C,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.21fe1fd7.chunk.js","sourcesContent":["const BreadthFirstSearch = require(\"./BreadthFirstSearch\");\n\nmodule.exports = {\n  BreadthFirstSearch: BreadthFirstSearch,\n  none: function() {}\n};\n","const GraphHelper = require(\"../DataStructures/GraphHelper\");\nconst Queue = require(\"../DataStructures/Queue\");\n\n// function will return the order in which nodes are traversed during BFS\nfunction BreadthFirstSearch(maze, start, end) {\n  var queue = new Queue();\n  var rows = maze.length;\n  var cols = maze[0].length;\n  var graphHelper = new GraphHelper(maze);\n\n  // making the distances and tracking array\n  var distances = [];\n  var parentTracking = [];\n  for (let i = 0; i < rows; i++) {\n    let row = [];\n    let parentRow = [];\n    for (let j = 0; j < cols; j++) {\n      row.push(-1);\n      parentRow.push(false);\n    }\n    parentTracking.push(parentRow);\n    distances.push(row);\n  }\n\n  // BFS\n  var order = [];\n  var finalDistance = -1;\n  distances[start[0]][start[1]] = 0;\n  queue.enqueue(start);\n  while (!queue.isEmpty()) {\n    // console.log(\"queue\", JSON.stringify(queue.queue));\n    var currNode = queue.dequeue();\n    var currDistance = distances[currNode[0]][currNode[1]];\n    if (currNode[0] !== end[0] || currNode[1] !== end[1]) {\n      var currNeighbours = graphHelper.returnNeighbours(currNode);\n      for (let i = 0; i < currNeighbours.length; i++) {\n        if (distances[currNeighbours[i][0]][currNeighbours[i][1]] === -1) {\n          queue.enqueue(currNeighbours[i]);\n          distances[currNeighbours[i][0]][currNeighbours[i][1]] =\n            currDistance + 1;\n          parentTracking[currNeighbours[i][0]][currNeighbours[i][1]] = currNode;\n        }\n      }\n      order.push(currNode);\n    } else {\n      finalDistance = currDistance;\n      break;\n    }\n  }\n\n  // finding the shortest path\n  var itr = parentTracking[end[0]][end[1]];\n  var shortestPath = [end];\n  while (itr) {\n    shortestPath.push(itr);\n    itr = parentTracking[itr[0]][itr[1]];\n  }\n\n  return {\n    traversalOrder: order,\n    shortestPath: shortestPath,\n    distance: finalDistance\n  };\n}\n\nmodule.exports = BreadthFirstSearch;\n","class GraphHelper {\n  constructor(graph) {\n    this.graph = graph;\n    this.rows = graph.length;\n    this.cols = graph[0].length;\n    console.log(\"cols\", this.cols);\n  }\n\n  returnNeighbours = index => {\n    var result = [];\n\n    let i = index[0],\n      j = index[1];\n\n    if (i - 1 >= 1) {\n      let neighbour = this.graph[i - 1][j];\n      if (neighbour === 0 || neighbour === 4) {\n        result.push([i - 1, j]);\n      }\n    }\n\n    if (j - 1 >= 1) {\n      let neighbour = this.graph[i][j - 1];\n      if (neighbour === 0 || neighbour === 4) {\n        result.push([i, j - 1]);\n      }\n    }\n\n    if (i + 1 < this.rows - 1) {\n      let neighbour = this.graph[i + 1][j];\n      if (neighbour === 0 || neighbour === 4) {\n        result.push([i + 1, j]);\n      }\n    }\n\n    if (j + 1 < this.cols - 1) {\n      let neighbour = this.graph[i][j + 1];\n      if (neighbour === 0 || neighbour === 4) {\n        result.push([i, j + 1]);\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = GraphHelper;\n","class Queue {\n  constructor() {\n    this.queue = [];\n  }\n  enqueue = data => {\n    this.queue.push(data);\n  };\n  dequeue = () => {\n    return this.queue.splice(0, 1)[0];\n  };\n  isEmpty = () => {\n    return this.queue.length === 0;\n  };\n}\n\nmodule.exports = Queue;\n","const RandomizedVerticals = require(\"./RandomizedVerticals\");\nconst RandomizedHorizontals = require(\"./RandomizedHorizontals\");\nmodule.exports = {\n  RandomizedVerticals: RandomizedVerticals,\n  RandomizedHorizontals: RandomizedHorizontals,\n  none: function() {}\n};\n","function RandomizedVerticals(grid) {\n  var rows = grid.length;\n  var cols = grid[0].length;\n  var lines = parseInt((cols - 2) / 2);\n  var holes = [];\n  for (let i = 0; i < lines; i++) {\n    var currHoleI = parseInt(Math.random() * (rows - 2) + 1);\n    holes.push(currHoleI);\n  }\n  var result = [];\n  for (let i = 0; i < holes.length; i++) {\n    for (let j = 1; j < rows - 1; j++) {\n      if (j !== holes[i]) {\n        result.push([j, 2 * i + 2]);\n      }\n    }\n  }\n  return result;\n}\nmodule.exports = RandomizedVerticals;\n","function RandomizedHorizontals(grid) {\n  var rows = grid.length;\n  var cols = grid[0].length;\n\n  var lines = parseInt((rows - 2) / 2);\n  var holes = [];\n  for (let i = 0; i < lines; i++) {\n    var currHoleI = parseInt(Math.random() * (cols - 2) + 1);\n    holes.push(currHoleI);\n  }\n  var result = [];\n  for (let i = 0; i < holes.length; i++) {\n    for (let j = 1; j < cols - 1; j++) {\n      if (j !== holes[i]) {\n        result.push([2 * i + 2, j]);\n      }\n    }\n  }\n  return result;\n}\nmodule.exports = RandomizedHorizontals;\n","import React, { Component } from \"react\";\nimport Sketch from \"react-p5\";\n\nconst PathAlgorithms = require(\"./Path/Path\");\nconst MazeAlgorithms = require(\"./Maze/Maze\");\n\n// TODO: change maze wall to maze wall on click and make a maze wall wrapper for i,j\n// make a clear traversal which doesn't clear walls,start and end basically clears when free\n\n// 0-> free\n// 1-> start\n// 2-> maze wall\n// 3-> border wall\n// 4-> end\n\nexport default class Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.objectDraw = {\n      start: this.placeStartOnClick,\n      end: this.placeEndOnClick,\n      wall: this.placeMazeWallOnClick,\n      none: this.empty\n    };\n  }\n\n  setup = (p5, canvasParentRef) => {\n    this.width = p5.windowWidth * 1; //pixels\n    this.height = p5.windowHeight * 0.89; //pixels\n    this.mazeHeight = 61; //units\n    this.mazeWidth = 121; //units\n    this.mazeHeightUnit = this.height / this.mazeHeight; // pixels/unit\n    this.mazeWidthUnit = this.width / this.mazeWidth; // pixels/unit\n    p5.createCanvas(this.width, this.height).parent(canvasParentRef);\n    this.initGrid(p5);\n    // flags to reduce time complexities\n    this.place = this.empty;\n    this.startPlaced = false;\n    this.startCoords = [];\n    this.endPlaced = false;\n    this.endCoords = [];\n    this.animated = false;\n    // p5.frameRate(1);\n  };\n\n  initGrid(p5) {\n    this.graph = [];\n    for (let i = 0; i < this.mazeHeight; i++) {\n      var row = [];\n      for (let j = 0; j < this.mazeWidth; j++) {\n        if (\n          i === 0 ||\n          j === 0 ||\n          i === this.mazeHeight - 1 ||\n          j === this.mazeWidth - 1\n        ) {\n          row.push(3);\n          p5.fill(41, 179, 163);\n        } else {\n          p5.fill(255);\n          row.push(0);\n        }\n        p5.rect(\n          this.mazeWidthUnit * j,\n          this.mazeHeightUnit * i,\n          this.mazeWidthUnit,\n          this.mazeHeightUnit\n        );\n      }\n      this.graph.push(row);\n    }\n  }\n\n  calculateIndex = (X, Y) => {\n    let j = parseInt(X / this.mazeWidthUnit);\n    let i = parseInt(Y / this.mazeHeightUnit);\n    return [i, j];\n  };\n\n  colourBox = (p5, index, fillValue) => {\n    let i = index[0],\n      j = index[1];\n    if (typeof fillValue === \"number\") {\n      p5.fill(fillValue);\n    } else {\n      p5.fill(fillValue[0], fillValue[1], fillValue[2]);\n    }\n    p5.rect(\n      this.mazeWidthUnit * j,\n      this.mazeHeightUnit * i,\n      this.mazeWidthUnit,\n      this.mazeHeightUnit\n    );\n  };\n\n  empty = () => {};\n\n  placeStartOnClick = p5 => {\n    let index = this.calculateIndex(p5.mouseX, p5.mouseY);\n    if (\n      index[0] < this.mazeHeight &&\n      index[0] >= 0 &&\n      index[1] < this.mazeWidth &&\n      index[1] >= 0\n    ) {\n      if (this.graph[index[0]][index[1]] === 0) {\n        if (!this.startPlaced) {\n          this.graph[index[0]][index[1]] = 1;\n          this.colourBox(p5, index, [0, 0, 255]);\n          this.startPlaced = true;\n          this.startCoords = index;\n        } else {\n          // TODO: can make like a popup which says start has already been placed\n        }\n      } else if (this.startPlaced) {\n        if (this.graph[index[0]][index[1]] === 1) {\n          this.graph[index[0]][index[1]] = 0;\n          this.colourBox(p5, index, 255);\n          this.startPlaced = false;\n          this.startCoords = [];\n        }\n      }\n    }\n    this.place = this.empty;\n  };\n\n  placeEndOnClick = p5 => {\n    let index = this.calculateIndex(p5.mouseX, p5.mouseY);\n    if (\n      index[0] < this.mazeHeight &&\n      index[0] >= 0 &&\n      index[1] < this.mazeWidth &&\n      index[1] >= 0\n    ) {\n      if (this.graph[index[0]][index[1]] === 0) {\n        if (!this.endPlaced) {\n          this.graph[index[0]][index[1]] = 4;\n          this.colourBox(p5, index, [0, 255, 255]);\n          this.endPlaced = true;\n          this.endCoords = index;\n        } else {\n          // TODO: can make like a popup which says start has already been placed\n        }\n      } else if (this.endPlaced) {\n        if (this.graph[index[0]][index[1]] === 4) {\n          this.graph[index[0]][index[1]] = 0;\n          this.colourBox(p5, index, 255);\n          this.endPlaced = false;\n          this.endCoords = [];\n        }\n      }\n    }\n    this.place = this.empty;\n  };\n\n  placeMazeWall = (p5, index) => {\n    if (this.graph[index[0]][index[1]] === 0) {\n      this.graph[index[0]][index[1]] = 2;\n      this.colourBox(p5, index, 0);\n    } else if (this.graph[index[0]][index[1]] === 2) {\n      this.graph[index[0]][index[1]] = 0;\n      this.colourBox(p5, index, 255);\n    }\n  };\n\n  placeMazeWallOnClick = p5 => {\n    let index = this.calculateIndex(p5.mouseX, p5.mouseY);\n    if (\n      index[0] < this.mazeHeight &&\n      index[0] >= 0 &&\n      index[1] < this.mazeWidth &&\n      index[1] >= 0\n    ) {\n      if (this.graph[index[0]][index[1]] === 0) {\n        this.graph[index[0]][index[1]] = 2;\n        this.colourBox(p5, index, 0);\n      } else if (this.graph[index[0]][index[1]] === 2) {\n        this.graph[index[0]][index[1]] = 0;\n        this.colourBox(p5, index, 255);\n      }\n    }\n\n    this.place = this.empty;\n  };\n\n  animatePath = (p5, order) => {\n    var colour = [\n      Math.floor(Math.random() * 255 + 0),\n      Math.floor(Math.random() * 255 + 0),\n      Math.floor(Math.random() * 255 + 0)\n    ];\n    p5.frameRate(1);\n    for (let i = 1; i < order.length - 1; i++) {\n      setTimeout(() => {\n        this.colourBox(p5, order[i], colour);\n      }, 0);\n    }\n    p5.frameRate(10);\n  };\n\n  animateMazeWalls = (p5, order) => {\n    this.clearSketch(p5);\n    for (let i = 0; i < order.length; i++) {\n      setTimeout(() => {\n        this.placeMazeWall(p5, order[i]);\n      }, 0);\n    }\n  };\n\n  clearAnimation = p5 => {\n    for (let i = 0; i < this.graph.length; i++) {\n      for (let j = 0; j < this.graph[0].length; j++) {\n        if (this.graph[i][j] === 0) {\n          this.colourBox(p5, [i, j], 255);\n        }\n      }\n    }\n    this.animated = false;\n  };\n\n  clearSketch = p5 => {\n    this.initGrid(p5);\n    this.startPlaced = false;\n    this.startCoords = [];\n    this.endPlaced = false;\n    this.endCoords = [];\n    this.animated = false;\n  };\n\n  touchStarted = p5 => {\n    this.place = this.objectDraw[this.props.object];\n  };\n  draw = p5 => {\n    this.place(p5);\n\n    if (this.props.returnClear()) {\n      console.log(\"clearing\");\n      this.clearSketch(p5);\n    }\n    if (this.props.returnFindPath()) {\n      if (this.animated) {\n        this.clearAnimation(p5);\n      }\n\n      if (this.startPlaced && this.endPlaced) {\n        this.traversalInfo = PathAlgorithms[this.props.pathAlgorithm](\n          this.graph,\n          this.startCoords,\n          this.endCoords\n        );\n        if (this.traversalInfo) {\n          this.animatePath(p5, this.traversalInfo.traversalOrder);\n          this.animatePath(p5, this.traversalInfo.shortestPath);\n          this.props.getDistance(this.traversalInfo.distance);\n          this.animated = true;\n        }\n      } else {\n        // TODO: something which says start and end haven't been placed\n      }\n    }\n\n    if (this.props.returnGenerateMaze()) {\n      console.log(\"making maze\");\n      let mazeOrder = MazeAlgorithms[this.props.mazeAlgorithm](this.graph);\n      console.log(\"mazeorder\", mazeOrder);\n      if (mazeOrder) {\n        this.animateMazeWalls(p5, mazeOrder);\n      }\n    }\n  };\n\n  render = () => {\n    return (\n      <div>\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          touchStarted={this.touchStarted}\n          className=\"sketch\"\n        />\n      </div>\n    );\n  };\n}\n","import React, { Component } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default class CustomNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedObject: \"select object\",\n      selectedMazeAlgorithm: \"select maze algorithm\",\n      selectedPathAlgorithm: \"select path algorithm\"\n    };\n  }\n  render() {\n    return (\n      <Navbar bg=\"dark\" className=\"navbar-custom\">\n        <Container>\n          <Col>\n            <Dropdown className=\"nav-element\" variant=\"light\">\n              <Dropdown.Toggle\n                className=\"nav-element\"\n                variant=\"light\"\n                id=\"dropdown-basic\"\n              >\n                {this.state.selectedObject}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"nav-element\">\n                {[\"Start\", \"Wall\", \"End\"].map(object => {\n                  return (\n                    <Dropdown.Item\n                      onClick={() => {\n                        this.props.getObject(object.toLowerCase());\n                        this.setState({\n                          selectedObject: object\n                        });\n                      }}\n                    >\n                      {object}\n                    </Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          {/*  */}\n          <Col>\n            <Dropdown as={ButtonGroup} variant=\"light\" className=\"nav-element\">\n              <Button onClick={this.props.generateMaze} variant=\"light\">\n                {this.state.selectedMazeAlgorithm}\n              </Button>\n\n              <Dropdown.Toggle\n                split\n                variant=\"light\"\n                id=\"dropdown-split-basic\"\n              />\n\n              <Dropdown.Menu>\n                {[\"Randomized Verticals\", \"Randomized Horizontals\"].map(\n                  mazeAlgorithm => {\n                    return (\n                      <Dropdown.Item\n                        onClick={() => {\n                          this.props.getMazeAlgorithm(\n                            mazeAlgorithm.replace(/ /g, \"\")\n                          );\n                          this.setState({\n                            selectedMazeAlgorithm: mazeAlgorithm\n                          });\n                        }}\n                      >\n                        {mazeAlgorithm}\n                      </Dropdown.Item>\n                    );\n                  }\n                )}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          {/*  */}\n\n          <Col>\n            <Dropdown as={ButtonGroup} variant=\"light\" className=\"nav-element\">\n              <Button onClick={this.props.findPath} variant=\"light\">\n                {this.state.selectedPathAlgorithm}\n              </Button>\n\n              <Dropdown.Toggle\n                split\n                variant=\"light\"\n                id=\"dropdown-split-basic\"\n              />\n\n              <Dropdown.Menu>\n                {[\"Breadth First Search\"].map(pathAlgorithm => {\n                  return (\n                    <Dropdown.Item\n                      onClick={() => {\n                        this.props.getShortPathAlgorithm(\n                          pathAlgorithm.replace(/ /g, \"\")\n                        );\n                        this.setState({\n                          selectedPathAlgorithm: pathAlgorithm\n                        });\n                      }}\n                    >\n                      {pathAlgorithm}\n                    </Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          <Col>\n            <Button\n              variant=\"light\"\n              onClick={() => {\n                this.props.clearSketch();\n              }}\n              className=\"nav-element\"\n            >\n              Clear\n            </Button>\n          </Col>\n          <Col></Col>\n          <Col>\n            <Button variant=\"light\" className=\"nav-element\">\n              Distance <Badge variant=\"dark\">{this.props.distance}</Badge>\n            </Button>\n          </Col>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n","import React from \"react\";\nimport Graph from \"./components/GraphSketch\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      object: \"none\",\n      mazeAlgorithm: \"none\",\n      pathAlgorithm: \"none\",\n      distance: 0\n    };\n    this.getObject = this.getObject.bind(this);\n    this.getMazeAlgorithm = this.getMazeAlgorithm.bind(this);\n    this.getShortPathAlgorithm = this.getShortPathAlgorithm.bind(this);\n    this.clearSketch = this.clearSketch.bind(this);\n    this.returnClear = this.returnClear.bind(this);\n    this.getDistance = this.getDistance.bind(this);\n    this.findPath = this.findPath.bind(this);\n    this.returnFindPath = this.returnFindPath.bind(this);\n    this.generateMaze = this.generateMaze.bind(this);\n    this.returnGenerateMaze = this.returnGenerateMaze.bind(this);\n  }\n\n  getObject = object => {\n    this.setState({ object: object });\n  };\n  getMazeAlgorithm = mazeAlgorithm => {\n    this.setState({ mazeAlgorithm: mazeAlgorithm });\n  };\n  getShortPathAlgorithm = pathAlgorithm => {\n    this.setState({ pathAlgorithm: pathAlgorithm });\n  };\n\n  clearSketch = () => {\n    this.setState({ clear: true });\n  };\n  findPath = () => {\n    this.setState({ findPath: true });\n  };\n  generateMaze = () => {\n    console.log(\"hi\");\n    this.setState({ generateMaze: true });\n  };\n  returnClear = () => {\n    if (this.state.clear) {\n      this.setState({\n        clear: false,\n        distance: 0\n      });\n      return true;\n    }\n    return false;\n  };\n  returnFindPath = () => {\n    // console.log(this.s)\n    if (this.state.findPath) {\n      this.setState({\n        findPath: false\n      });\n      return true;\n    }\n    return false;\n  };\n  returnGenerateMaze = () => {\n    if (this.state.generateMaze) {\n      console.log(\"hi2\");\n      this.setState({\n        generateMaze: false\n      });\n      return true;\n    }\n    return false;\n  };\n  getDistance = distance => {\n    this.setState({ distance: distance });\n  };\n  render() {\n    return (\n      <div className=\"main\">\n        <Navbar\n          getObject={this.getObject}\n          getMazeAlgorithm={this.getMazeAlgorithm}\n          getShortPathAlgorithm={this.getShortPathAlgorithm}\n          clearSketch={this.clearSketch}\n          findPath={this.findPath}\n          distance={this.state.distance}\n          generateMaze={this.generateMaze}\n        />\n        <Graph\n          className=\"center\"\n          object={this.state.object}\n          mazeAlgorithm={this.state.mazeAlgorithm}\n          pathAlgorithm={this.state.pathAlgorithm}\n          returnClear={this.returnClear}\n          returnFindPath={this.returnFindPath}\n          getDistance={this.getDistance}\n          returnGenerateMaze={this.returnGenerateMaze}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}